(()=>{"use strict";var t={426:(t,e,n)=>{n.d(e,{Z:()=>m});var i=n(537),o=n.n(i),s=n(645),r=n.n(s),a=n(667),d=n.n(a),c=new URL(n(467),n.b),l=new URL(n(640),n.b),A=r()(o()),u=d()(c),p=d()(l);A.push([t.id,`* {\n    box-sizing: border-box;\n    margin: 0;\n    padding: 0;\n}\n\nbody {\n    height: 100vh;\n    font-family: Verdana, Geneva, Tahoma, sans-serif;\n    display: grid;\n    grid-template-columns: 1fr 3fr;\n    grid-template-rows: auto 1fr;\n}\n\n.header {\n    color: white;\n    text-align: center;\n    background-color: darkslategray;\n    padding: 10px;\n    grid-column: 1 / -1;\n}\n\n.list-content {\n    background-color: lightgray;\n    padding: 10px;\n}\n\n.add-list-content {\n    margin-bottom: 10px;\n    display: grid;\n    place-items: center;\n}\n\n.add-list-button {\n    color: white;\n    font-size: 1.5rem;\n    font-weight: bold;\n    background-color: #16a34a;\n    padding: 5px 10px;\n    border: none;\n    border-radius: 5px;\n}\n\n.add-list-modal,\n.edit-list-item-modal {\n    border: none;\n    border-radius: 5px;\n    margin: auto;\n\n    &::backdrop {\n        background-color: rgba(0, 0, 0, 0.5)\n    }\n}\n\n.add-list-form,\n.edit-list-item-form {\n    text-align: center;\n    padding: 10px;\n    display: flex;\n    gap: 10px;\n    flex-direction: column;\n\n    & h1 {\n        font-size: 2rem;\n        color: darkslategrey;\n    }\n}\n\n.add-list-input,\n.edit-list-item-input {\n    font-size: 1.2rem;\n    padding: 5px 10px;\n    border-radius: 5px;\n}\n\n.add-list-submit-button,\n.add-list-cancel-button,\n.edit-list-item-submit-button,\n.edit-list-item-cancel-button {\n    font-size: 1.2rem;\n    color: white;\n    font-weight: bold;\n    padding: 5px 0;\n    border: none;\n    border-radius: 5px;\n}\n\n.add-list-submit-button,\n.edit-list-item-submit-button  {\n    background-color: #3b82f6;\n}\n\n.add-list-cancel-button,\n.edit-list-item-cancel-button {\n    background-color: #ef4444;\n}\n\n.list-container {\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n}\n\n.list-item-container {\n    font-size: 1.5rem;\n    padding: 10px;\n    border-radius: 5px;\n    display: flex;\n    gap: 10px;\n    align-items: center;\n    \n    & .list-item {\n        width: 100%;\n    }\n\n    & .delete-list-item-button,\n    & .edit-list-item-button {\n        width: 1.2rem;\n        height: 1.2rem;\n        border: none;\n    }\n\n    & .delete-list-item-button {\n        background: url(${u}) no-repeat;\n    }\n\n    & .edit-list-item-button {\n        background: url(${p}) no-repeat;\n    }\n\n    &:hover {\n        background-color: rgba(0, 0, 0, 0.2);\n    }\n}\n\n.task-content {\n    padding: 10px;\n}`,"",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,sBAAsB;IACtB,SAAS;IACT,UAAU;AACd;;AAEA;IACI,aAAa;IACb,gDAAgD;IAChD,aAAa;IACb,8BAA8B;IAC9B,4BAA4B;AAChC;;AAEA;IACI,YAAY;IACZ,kBAAkB;IAClB,+BAA+B;IAC/B,aAAa;IACb,mBAAmB;AACvB;;AAEA;IACI,2BAA2B;IAC3B,aAAa;AACjB;;AAEA;IACI,mBAAmB;IACnB,aAAa;IACb,mBAAmB;AACvB;;AAEA;IACI,YAAY;IACZ,iBAAiB;IACjB,iBAAiB;IACjB,yBAAyB;IACzB,iBAAiB;IACjB,YAAY;IACZ,kBAAkB;AACtB;;AAEA;;IAEI,YAAY;IACZ,kBAAkB;IAClB,YAAY;;IAEZ;QACI;IACJ;AACJ;;AAEA;;IAEI,kBAAkB;IAClB,aAAa;IACb,aAAa;IACb,SAAS;IACT,sBAAsB;;IAEtB;QACI,eAAe;QACf,oBAAoB;IACxB;AACJ;;AAEA;;IAEI,iBAAiB;IACjB,iBAAiB;IACjB,kBAAkB;AACtB;;AAEA;;;;IAII,iBAAiB;IACjB,YAAY;IACZ,iBAAiB;IACjB,cAAc;IACd,YAAY;IACZ,kBAAkB;AACtB;;AAEA;;IAEI,yBAAyB;AAC7B;;AAEA;;IAEI,yBAAyB;AAC7B;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,SAAS;AACb;;AAEA;IACI,iBAAiB;IACjB,aAAa;IACb,kBAAkB;IAClB,aAAa;IACb,SAAS;IACT,mBAAmB;;IAEnB;QACI,WAAW;IACf;;IAEA;;QAEI,aAAa;QACb,cAAc;QACd,YAAY;IAChB;;IAEA;QACI,6DAAwD;IAC5D;;IAEA;QACI,6DAAsD;IAC1D;;IAEA;QACI,oCAAoC;IACxC;AACJ;;AAEA;IACI,aAAa;AACjB",sourcesContent:['* {\n    box-sizing: border-box;\n    margin: 0;\n    padding: 0;\n}\n\nbody {\n    height: 100vh;\n    font-family: Verdana, Geneva, Tahoma, sans-serif;\n    display: grid;\n    grid-template-columns: 1fr 3fr;\n    grid-template-rows: auto 1fr;\n}\n\n.header {\n    color: white;\n    text-align: center;\n    background-color: darkslategray;\n    padding: 10px;\n    grid-column: 1 / -1;\n}\n\n.list-content {\n    background-color: lightgray;\n    padding: 10px;\n}\n\n.add-list-content {\n    margin-bottom: 10px;\n    display: grid;\n    place-items: center;\n}\n\n.add-list-button {\n    color: white;\n    font-size: 1.5rem;\n    font-weight: bold;\n    background-color: #16a34a;\n    padding: 5px 10px;\n    border: none;\n    border-radius: 5px;\n}\n\n.add-list-modal,\n.edit-list-item-modal {\n    border: none;\n    border-radius: 5px;\n    margin: auto;\n\n    &::backdrop {\n        background-color: rgba(0, 0, 0, 0.5)\n    }\n}\n\n.add-list-form,\n.edit-list-item-form {\n    text-align: center;\n    padding: 10px;\n    display: flex;\n    gap: 10px;\n    flex-direction: column;\n\n    & h1 {\n        font-size: 2rem;\n        color: darkslategrey;\n    }\n}\n\n.add-list-input,\n.edit-list-item-input {\n    font-size: 1.2rem;\n    padding: 5px 10px;\n    border-radius: 5px;\n}\n\n.add-list-submit-button,\n.add-list-cancel-button,\n.edit-list-item-submit-button,\n.edit-list-item-cancel-button {\n    font-size: 1.2rem;\n    color: white;\n    font-weight: bold;\n    padding: 5px 0;\n    border: none;\n    border-radius: 5px;\n}\n\n.add-list-submit-button,\n.edit-list-item-submit-button  {\n    background-color: #3b82f6;\n}\n\n.add-list-cancel-button,\n.edit-list-item-cancel-button {\n    background-color: #ef4444;\n}\n\n.list-container {\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n}\n\n.list-item-container {\n    font-size: 1.5rem;\n    padding: 10px;\n    border-radius: 5px;\n    display: flex;\n    gap: 10px;\n    align-items: center;\n    \n    & .list-item {\n        width: 100%;\n    }\n\n    & .delete-list-item-button,\n    & .edit-list-item-button {\n        width: 1.2rem;\n        height: 1.2rem;\n        border: none;\n    }\n\n    & .delete-list-item-button {\n        background: url("./resources/delete-icon.svg") no-repeat;\n    }\n\n    & .edit-list-item-button {\n        background: url("./resources/edit-icon.svg") no-repeat;\n    }\n\n    &:hover {\n        background-color: rgba(0, 0, 0, 0.2);\n    }\n}\n\n.task-content {\n    padding: 10px;\n}'],sourceRoot:""}]);const m=A},645:t=>{t.exports=function(t){var e=[];return e.toString=function(){return this.map((function(e){var n="",i=void 0!==e[5];return e[4]&&(n+="@supports (".concat(e[4],") {")),e[2]&&(n+="@media ".concat(e[2]," {")),i&&(n+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),n+=t(e),i&&(n+="}"),e[2]&&(n+="}"),e[4]&&(n+="}"),n})).join("")},e.i=function(t,n,i,o,s){"string"==typeof t&&(t=[[null,t,void 0]]);var r={};if(i)for(var a=0;a<this.length;a++){var d=this[a][0];null!=d&&(r[d]=!0)}for(var c=0;c<t.length;c++){var l=[].concat(t[c]);i&&r[l[0]]||(void 0!==s&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=s),n&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=n):l[2]=n),o&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=o):l[4]="".concat(o)),e.push(l))}},e}},667:t=>{t.exports=function(t,e){return e||(e={}),t?(t=String(t.__esModule?t.default:t),/^['"].*['"]$/.test(t)&&(t=t.slice(1,-1)),e.hash&&(t+=e.hash),/["'() \t\n]|(%20)/.test(t)||e.needQuotes?'"'.concat(t.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):t):t}},537:t=>{t.exports=function(t){var e=t[1],n=t[3];if(!n)return e;if("function"==typeof btoa){var i=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(i),s="/*# ".concat(o," */");return[e].concat([s]).join("\n")}return[e].join("\n")}},379:t=>{var e=[];function n(t){for(var n=-1,i=0;i<e.length;i++)if(e[i].identifier===t){n=i;break}return n}function i(t,i){for(var s={},r=[],a=0;a<t.length;a++){var d=t[a],c=i.base?d[0]+i.base:d[0],l=s[c]||0,A="".concat(c," ").concat(l);s[c]=l+1;var u=n(A),p={css:d[1],media:d[2],sourceMap:d[3],supports:d[4],layer:d[5]};if(-1!==u)e[u].references++,e[u].updater(p);else{var m=o(p,i);i.byIndex=a,e.splice(a,0,{identifier:A,updater:m,references:1})}r.push(A)}return r}function o(t,e){var n=e.domAPI(e);return n.update(t),function(e){if(e){if(e.css===t.css&&e.media===t.media&&e.sourceMap===t.sourceMap&&e.supports===t.supports&&e.layer===t.layer)return;n.update(t=e)}else n.remove()}}t.exports=function(t,o){var s=i(t=t||[],o=o||{});return function(t){t=t||[];for(var r=0;r<s.length;r++){var a=n(s[r]);e[a].references--}for(var d=i(t,o),c=0;c<s.length;c++){var l=n(s[c]);0===e[l].references&&(e[l].updater(),e.splice(l,1))}s=d}}},569:t=>{var e={};t.exports=function(t,n){var i=function(t){if(void 0===e[t]){var n=document.querySelector(t);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(t){n=null}e[t]=n}return e[t]}(t);if(!i)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");i.appendChild(n)}},216:t=>{t.exports=function(t){var e=document.createElement("style");return t.setAttributes(e,t.attributes),t.insert(e,t.options),e}},565:(t,e,n)=>{t.exports=function(t){var e=n.nc;e&&t.setAttribute("nonce",e)}},795:t=>{t.exports=function(t){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=t.insertStyleElement(t);return{update:function(n){!function(t,e,n){var i="";n.supports&&(i+="@supports (".concat(n.supports,") {")),n.media&&(i+="@media ".concat(n.media," {"));var o=void 0!==n.layer;o&&(i+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),i+=n.css,o&&(i+="}"),n.media&&(i+="}"),n.supports&&(i+="}");var s=n.sourceMap;s&&"undefined"!=typeof btoa&&(i+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(s))))," */")),e.styleTagTransform(i,t,e.options)}(e,t,n)},remove:function(){!function(t){if(null===t.parentNode)return!1;t.parentNode.removeChild(t)}(e)}}}},589:t=>{t.exports=function(t,e){if(e.styleSheet)e.styleSheet.cssText=t;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(t))}}},467:(t,e,n)=>{t.exports=n.p+"a0cac0a4ca0232a86a5b.svg"},640:(t,e,n)=>{t.exports=n.p+"ec6f6c24e90698c49d67.svg"}},e={};function n(i){var o=e[i];if(void 0!==o)return o.exports;var s=e[i]={id:i,exports:{}};return t[i](s,s.exports,n),s.exports}n.m=t,n.n=t=>{var e=t&&t.__esModule?()=>t.default:()=>t;return n.d(e,{a:e}),e},n.d=(t,e)=>{for(var i in e)n.o(e,i)&&!n.o(t,i)&&Object.defineProperty(t,i,{enumerable:!0,get:e[i]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(t){if("object"==typeof window)return window}}(),n.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),(()=>{var t;n.g.importScripts&&(t=n.g.location+"");var e=n.g.document;if(!t&&e&&(e.currentScript&&(t=e.currentScript.src),!t)){var i=e.getElementsByTagName("script");if(i.length)for(var o=i.length-1;o>-1&&!t;)t=i[o--].src}if(!t)throw new Error("Automatic publicPath is not supported in this browser");t=t.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),n.p=t})(),n.b=document.baseURI||self.location.href,n.nc=void 0,(()=>{class t{constructor(t,e){this.title=t,this.description=e,this.date=(new Date).toDateString(),this.complete=!1}markAsComplete(){this.complete=!0}updateTask(t,e){this.title=t,this.description=e}}var e=n(379),i=n.n(e),o=n(795),s=n.n(o),r=n(569),a=n.n(r),d=n(565),c=n.n(d),l=n(216),A=n.n(l),u=n(589),p=n.n(u),m=n(426),b={};b.styleTagTransform=p(),b.setAttributes=c(),b.insert=a().bind(null,"head"),b.domAPI=s(),b.insertStyleElement=A(),i()(m.Z,b),m.Z&&m.Z.locals&&m.Z.locals;const f=new class{list=[];createList(t){this.list.push({[t]:[]})}getList(t){return this.list.find((e=>e[t]))[t]}renameList(t,e){this.list.find((n=>{n[t]&&(n[e]=n[t],delete n[t])}))}deleteList(t){this.list.splice(this.list.findIndex((e=>e[t])),1)}createListTask(e,n,i){this.getList(e)&&this.getList(e).push(new t(n,i))}getListTask(t,e){return this.getList(t).find((t=>t.title===e))}deleteListTask(t,e){this.getList(t).splice(this.getList(t).findIndex((n=>n===this.getListTask(t,e))),1)}};f.createList("testList1"),f.createList("testList2"),f.createList("testList3"),f.createListTask("testList1","testList1Title1","testList1Description1"),f.createListTask("testList1","testList1Title2","testList1Description2"),f.createListTask("testList1","testList1Title3","testList1Description3"),f.createListTask("testList2","testList2Title1","testList2Description1"),f.createListTask("testList2","testList2Title2","testList2Description2"),f.createListTask("testList2","testList2Title3","testList2Description3"),f.createListTask("testList3","testList3Title1","testList3Description1"),f.createListTask("testList3","testList3Title2","testList3Description2"),f.createListTask("testList3","testList3Title3","testList3Description3"),function(t){const e=document.querySelector(".list-container"),n=document.querySelector(".add-list-button"),i=document.querySelector(".add-list-modal"),o=document.querySelector(".add-list-submit-button"),s=document.querySelector(".add-list-input");function r(n){const i=document.createElement("p"),o=document.createElement("button"),s=document.createElement("button"),r=document.createElement("dialog"),a=document.createElement("form"),d=document.createElement("h1"),c=document.createElement("input"),l=document.createElement("button"),A=document.createElement("button"),u=document.createElement("div");i.textContent=n,d.textContent="Edit List",l.textContent="Submit",A.textContent="Cancel",i.classList.add("list-item"),o.classList.add("delete-list-item-button"),s.classList.add("edit-list-item-button"),r.classList.add("edit-list-item-modal"),a.classList.add("edit-list-item-form"),c.classList.add("edit-list-item-input"),l.classList.add("edit-list-item-submit-button"),A.classList.add("edit-list-item-cancel-button"),u.classList.add("list-item-container"),a.setAttribute("method","dialog"),c.setAttribute("placeholder","New List Name"),function(e){e.addEventListener("click",(function(){t.deleteList(this.previousElementSibling.textContent),this.parentElement.remove()}))}(o),function(e){e.editListItemButton.addEventListener("click",(function(){e.editListItemModal.showModal(),e.editListItemSubmitButton.addEventListener("click",(function(){e.editListItemInput.value&&(t.renameList(e.listItem.textContent,e.editListItemInput.value),e.listItem.textContent=e.editListItemInput.value)}))}))}({listItem:i,editListItemButton:s,editListItemModal:r,editListItemInput:c,editListItemSubmitButton:l}),function(t,e){const n=document.querySelector(".task-container"),i=document.querySelector(".task-list-title");function o(e,n){const i=document.createElement("div");for(let o=0;o<n.length;o++){const s=document.createElement("div"),r=document.createElement("h3"),a=document.createElement("p"),d=document.createElement("p");r.textContent=t.getListTask(e,n[o].title).title,a.textContent=t.getListTask(e,n[o].title).description,d.textContent=t.getListTask(e,n[o].title).date,s.appendChild(r),s.appendChild(a),s.appendChild(d),i.appendChild(s)}return i}e.addEventListener("click",(function(){i.textContent=this.textContent,0===n.children.length?n.appendChild(o(this.textContent,t.getList(this.textContent))):n.replaceChild(o(this.textContent,t.getList(this.textContent)),n.children[0])}))}(t,i),u.appendChild(i),u.appendChild(o),u.appendChild(s),a.appendChild(d),a.appendChild(c),a.appendChild(l),a.appendChild(A),r.appendChild(a),u.appendChild(r),e.appendChild(u)}var a;t.list.forEach((t=>{r(Object.getOwnPropertyNames(t))})),a=t,n.addEventListener("click",(function(){i.showModal()})),o.addEventListener("click",(function(){s.value?(a.createList(s.value),r(s.value)):alert("Please provide a list name")}))}(f),console.log(f)})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QVMsV0FDL0JRLEVBQWNYLFlBQWNoTCxLQUFLZ0wsWUFDSyxJQUFsQ1UsRUFBY1EsU0FBUzVMLE9BQ3ZCb0wsRUFBYzFHLFlBQ2Q0RyxFQUFvQjVMLEtBQUtnTCxZQUFhOUIsRUFBU0csUUFBUXJKLEtBQUtnTCxlQUU1RFUsRUFBY1MsYUFDVlAsRUFBb0I1TCxLQUFLZ0wsWUFBYTlCLEVBQVNHLFFBQVFySixLQUFLZ0wsY0FDNURVLEVBQWNRLFNBQVMsR0FFbkMsR0FzQkosQ0RtQlFFLENBQVlsRCxFQUFVb0IsR0FFdEJTLEVBQWtCL0YsWUFBWXNGLEdBQzlCUyxFQUFrQi9GLFlBQVl1RixHQUM5QlEsRUFBa0IvRixZQUFZd0YsR0FDOUJFLEVBQWlCMUYsWUFBWTJGLEdBQzdCRCxFQUFpQjFGLFlBQVk0RixHQUM3QkYsRUFBaUIxRixZQUFZNkYsR0FDN0JILEVBQWlCMUYsWUFBWThGLEdBQzdCTCxFQUFrQnpGLFlBQVkwRixHQUM5QkssRUFBa0IvRixZQUFZeUYsR0FDOUJULEVBQWNoRixZQUFZK0YsRUFDOUIsQ0ExREEsSUE0RHFCN0ssRUFrQ0RnSixFQUFTcEosS0E3RnBCdU0sU0FBUW5NLElBQ1RtSyxFQUFvQnRELE9BQU91RixvQkFBb0JwTSxHQUFNLElBMER4Q0EsRUFtQ1RnSixFQWxDUmUsRUFBY2tCLGlCQUFpQixTQUFTLFdBQ3BDakIsRUFBYXFCLFdBQ2pCLElBRUFwQixFQUFvQmdCLGlCQUFpQixTQUFTLFdBQ3RDZixFQUFhb0IsT0FDYnRMLEVBQUtpSixXQUFXaUIsRUFBYW9CLE9BQzdCbkIsRUFBb0JELEVBQWFvQixRQUVqQ2UsTUFBTSw2QkFFZCxHQXdCUixDRjdFQUMsQ0FBWXRELEdBQ1p1RCxRQUFRQyxJQUFJeEQsRSIsInNvdXJjZXMiOlsid2VicGFjazovL3RvZG8tbGlzdC8uL3NyYy9zdHlsZS5jc3MiLCJ3ZWJwYWNrOi8vdG9kby1saXN0Ly4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qcyIsIndlYnBhY2s6Ly90b2RvLWxpc3QvLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvZ2V0VXJsLmpzIiwid2VicGFjazovL3RvZG8tbGlzdC8uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzIiwid2VicGFjazovL3RvZG8tbGlzdC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qcyIsIndlYnBhY2s6Ly90b2RvLWxpc3QvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzIiwid2VicGFjazovL3RvZG8tbGlzdC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qcyIsIndlYnBhY2s6Ly90b2RvLWxpc3QvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanMiLCJ3ZWJwYWNrOi8vdG9kby1saXN0Ly4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanMiLCJ3ZWJwYWNrOi8vdG9kby1saXN0Ly4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanMiLCJ3ZWJwYWNrOi8vdG9kby1saXN0L3dlYnBhY2svYm9vdHN0cmFwIiwid2VicGFjazovL3RvZG8tbGlzdC93ZWJwYWNrL3J1bnRpbWUvY29tcGF0IGdldCBkZWZhdWx0IGV4cG9ydCIsIndlYnBhY2s6Ly90b2RvLWxpc3Qvd2VicGFjay9ydW50aW1lL2RlZmluZSBwcm9wZXJ0eSBnZXR0ZXJzIiwid2VicGFjazovL3RvZG8tbGlzdC93ZWJwYWNrL3J1bnRpbWUvZ2xvYmFsIiwid2VicGFjazovL3RvZG8tbGlzdC93ZWJwYWNrL3J1bnRpbWUvaGFzT3duUHJvcGVydHkgc2hvcnRoYW5kIiwid2VicGFjazovL3RvZG8tbGlzdC93ZWJwYWNrL3J1bnRpbWUvcHVibGljUGF0aCIsIndlYnBhY2s6Ly90b2RvLWxpc3Qvd2VicGFjay9ydW50aW1lL2pzb25wIGNodW5rIGxvYWRpbmciLCJ3ZWJwYWNrOi8vdG9kby1saXN0L3dlYnBhY2svcnVudGltZS9ub25jZSIsIndlYnBhY2s6Ly90b2RvLWxpc3QvLi9zcmMvdGFzay5qcyIsIndlYnBhY2s6Ly90b2RvLWxpc3QvLi9zcmMvc3R5bGUuY3NzPzcxNjMiLCJ3ZWJwYWNrOi8vdG9kby1saXN0Ly4vc3JjL2luZGV4LmpzIiwid2VicGFjazovL3RvZG8tbGlzdC8uL3NyYy90b2RvLWxpc3QuanMiLCJ3ZWJwYWNrOi8vdG9kby1saXN0Ly4vc3JjL2xpc3QtY29udGVudC5qcyIsIndlYnBhY2s6Ly90b2RvLWxpc3QvLi9zcmMvdGFzay1jb250ZW50LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfR0VUX1VSTF9JTVBPUlRfX18gZnJvbSBcIi4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9nZXRVcmwuanNcIjtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMF9fXyA9IG5ldyBVUkwoXCIuL3Jlc291cmNlcy9kZWxldGUtaWNvbi5zdmdcIiwgaW1wb3J0Lm1ldGEudXJsKTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMV9fXyA9IG5ldyBVUkwoXCIuL3Jlc291cmNlcy9lZGl0LWljb24uc3ZnXCIsIGltcG9ydC5tZXRhLnVybCk7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyk7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMF9fXyA9IF9fX0NTU19MT0FERVJfR0VUX1VSTF9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzBfX18pO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzFfX18gPSBfX19DU1NfTE9BREVSX0dFVF9VUkxfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8xX19fKTtcbi8vIE1vZHVsZVxuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBgKiB7XG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgICBtYXJnaW46IDA7XG4gICAgcGFkZGluZzogMDtcbn1cblxuYm9keSB7XG4gICAgaGVpZ2h0OiAxMDB2aDtcbiAgICBmb250LWZhbWlseTogVmVyZGFuYSwgR2VuZXZhLCBUYWhvbWEsIHNhbnMtc2VyaWY7XG4gICAgZGlzcGxheTogZ3JpZDtcbiAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmciAzZnI7XG4gICAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiBhdXRvIDFmcjtcbn1cblxuLmhlYWRlciB7XG4gICAgY29sb3I6IHdoaXRlO1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBkYXJrc2xhdGVncmF5O1xuICAgIHBhZGRpbmc6IDEwcHg7XG4gICAgZ3JpZC1jb2x1bW46IDEgLyAtMTtcbn1cblxuLmxpc3QtY29udGVudCB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogbGlnaHRncmF5O1xuICAgIHBhZGRpbmc6IDEwcHg7XG59XG5cbi5hZGQtbGlzdC1jb250ZW50IHtcbiAgICBtYXJnaW4tYm90dG9tOiAxMHB4O1xuICAgIGRpc3BsYXk6IGdyaWQ7XG4gICAgcGxhY2UtaXRlbXM6IGNlbnRlcjtcbn1cblxuLmFkZC1saXN0LWJ1dHRvbiB7XG4gICAgY29sb3I6IHdoaXRlO1xuICAgIGZvbnQtc2l6ZTogMS41cmVtO1xuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xuICAgIGJhY2tncm91bmQtY29sb3I6ICMxNmEzNGE7XG4gICAgcGFkZGluZzogNXB4IDEwcHg7XG4gICAgYm9yZGVyOiBub25lO1xuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcbn1cblxuLmFkZC1saXN0LW1vZGFsLFxuLmVkaXQtbGlzdC1pdGVtLW1vZGFsIHtcbiAgICBib3JkZXI6IG5vbmU7XG4gICAgYm9yZGVyLXJhZGl1czogNXB4O1xuICAgIG1hcmdpbjogYXV0bztcblxuICAgICY6OmJhY2tkcm9wIHtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAwLCAwLCAwLjUpXG4gICAgfVxufVxuXG4uYWRkLWxpc3QtZm9ybSxcbi5lZGl0LWxpc3QtaXRlbS1mb3JtIHtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgcGFkZGluZzogMTBweDtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGdhcDogMTBweDtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuXG4gICAgJiBoMSB7XG4gICAgICAgIGZvbnQtc2l6ZTogMnJlbTtcbiAgICAgICAgY29sb3I6IGRhcmtzbGF0ZWdyZXk7XG4gICAgfVxufVxuXG4uYWRkLWxpc3QtaW5wdXQsXG4uZWRpdC1saXN0LWl0ZW0taW5wdXQge1xuICAgIGZvbnQtc2l6ZTogMS4ycmVtO1xuICAgIHBhZGRpbmc6IDVweCAxMHB4O1xuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcbn1cblxuLmFkZC1saXN0LXN1Ym1pdC1idXR0b24sXG4uYWRkLWxpc3QtY2FuY2VsLWJ1dHRvbixcbi5lZGl0LWxpc3QtaXRlbS1zdWJtaXQtYnV0dG9uLFxuLmVkaXQtbGlzdC1pdGVtLWNhbmNlbC1idXR0b24ge1xuICAgIGZvbnQtc2l6ZTogMS4ycmVtO1xuICAgIGNvbG9yOiB3aGl0ZTtcbiAgICBmb250LXdlaWdodDogYm9sZDtcbiAgICBwYWRkaW5nOiA1cHggMDtcbiAgICBib3JkZXI6IG5vbmU7XG4gICAgYm9yZGVyLXJhZGl1czogNXB4O1xufVxuXG4uYWRkLWxpc3Qtc3VibWl0LWJ1dHRvbixcbi5lZGl0LWxpc3QtaXRlbS1zdWJtaXQtYnV0dG9uICB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzNiODJmNjtcbn1cblxuLmFkZC1saXN0LWNhbmNlbC1idXR0b24sXG4uZWRpdC1saXN0LWl0ZW0tY2FuY2VsLWJ1dHRvbiB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2VmNDQ0NDtcbn1cblxuLmxpc3QtY29udGFpbmVyIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgZ2FwOiAxMHB4O1xufVxuXG4ubGlzdC1pdGVtLWNvbnRhaW5lciB7XG4gICAgZm9udC1zaXplOiAxLjVyZW07XG4gICAgcGFkZGluZzogMTBweDtcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBnYXA6IDEwcHg7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBcbiAgICAmIC5saXN0LWl0ZW0ge1xuICAgICAgICB3aWR0aDogMTAwJTtcbiAgICB9XG5cbiAgICAmIC5kZWxldGUtbGlzdC1pdGVtLWJ1dHRvbixcbiAgICAmIC5lZGl0LWxpc3QtaXRlbS1idXR0b24ge1xuICAgICAgICB3aWR0aDogMS4ycmVtO1xuICAgICAgICBoZWlnaHQ6IDEuMnJlbTtcbiAgICAgICAgYm9yZGVyOiBub25lO1xuICAgIH1cblxuICAgICYgLmRlbGV0ZS1saXN0LWl0ZW0tYnV0dG9uIHtcbiAgICAgICAgYmFja2dyb3VuZDogdXJsKCR7X19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMF9fX30pIG5vLXJlcGVhdDtcbiAgICB9XG5cbiAgICAmIC5lZGl0LWxpc3QtaXRlbS1idXR0b24ge1xuICAgICAgICBiYWNrZ3JvdW5kOiB1cmwoJHtfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8xX19ffSkgbm8tcmVwZWF0O1xuICAgIH1cblxuICAgICY6aG92ZXIge1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuMik7XG4gICAgfVxufVxuXG4udGFzay1jb250ZW50IHtcbiAgICBwYWRkaW5nOiAxMHB4O1xufWAsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovLy4vc3JjL3N0eWxlLmNzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFBQTtJQUNJLHNCQUFzQjtJQUN0QixTQUFTO0lBQ1QsVUFBVTtBQUNkOztBQUVBO0lBQ0ksYUFBYTtJQUNiLGdEQUFnRDtJQUNoRCxhQUFhO0lBQ2IsOEJBQThCO0lBQzlCLDRCQUE0QjtBQUNoQzs7QUFFQTtJQUNJLFlBQVk7SUFDWixrQkFBa0I7SUFDbEIsK0JBQStCO0lBQy9CLGFBQWE7SUFDYixtQkFBbUI7QUFDdkI7O0FBRUE7SUFDSSwyQkFBMkI7SUFDM0IsYUFBYTtBQUNqQjs7QUFFQTtJQUNJLG1CQUFtQjtJQUNuQixhQUFhO0lBQ2IsbUJBQW1CO0FBQ3ZCOztBQUVBO0lBQ0ksWUFBWTtJQUNaLGlCQUFpQjtJQUNqQixpQkFBaUI7SUFDakIseUJBQXlCO0lBQ3pCLGlCQUFpQjtJQUNqQixZQUFZO0lBQ1osa0JBQWtCO0FBQ3RCOztBQUVBOztJQUVJLFlBQVk7SUFDWixrQkFBa0I7SUFDbEIsWUFBWTs7SUFFWjtRQUNJO0lBQ0o7QUFDSjs7QUFFQTs7SUFFSSxrQkFBa0I7SUFDbEIsYUFBYTtJQUNiLGFBQWE7SUFDYixTQUFTO0lBQ1Qsc0JBQXNCOztJQUV0QjtRQUNJLGVBQWU7UUFDZixvQkFBb0I7SUFDeEI7QUFDSjs7QUFFQTs7SUFFSSxpQkFBaUI7SUFDakIsaUJBQWlCO0lBQ2pCLGtCQUFrQjtBQUN0Qjs7QUFFQTs7OztJQUlJLGlCQUFpQjtJQUNqQixZQUFZO0lBQ1osaUJBQWlCO0lBQ2pCLGNBQWM7SUFDZCxZQUFZO0lBQ1osa0JBQWtCO0FBQ3RCOztBQUVBOztJQUVJLHlCQUF5QjtBQUM3Qjs7QUFFQTs7SUFFSSx5QkFBeUI7QUFDN0I7O0FBRUE7SUFDSSxhQUFhO0lBQ2Isc0JBQXNCO0lBQ3RCLFNBQVM7QUFDYjs7QUFFQTtJQUNJLGlCQUFpQjtJQUNqQixhQUFhO0lBQ2Isa0JBQWtCO0lBQ2xCLGFBQWE7SUFDYixTQUFTO0lBQ1QsbUJBQW1COztJQUVuQjtRQUNJLFdBQVc7SUFDZjs7SUFFQTs7UUFFSSxhQUFhO1FBQ2IsY0FBYztRQUNkLFlBQVk7SUFDaEI7O0lBRUE7UUFDSSw2REFBd0Q7SUFDNUQ7O0lBRUE7UUFDSSw2REFBc0Q7SUFDMUQ7O0lBRUE7UUFDSSxvQ0FBb0M7SUFDeEM7QUFDSjs7QUFFQTtJQUNJLGFBQWE7QUFDakJcIixcInNvdXJjZXNDb250ZW50XCI6W1wiKiB7XFxuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XFxuICAgIG1hcmdpbjogMDtcXG4gICAgcGFkZGluZzogMDtcXG59XFxuXFxuYm9keSB7XFxuICAgIGhlaWdodDogMTAwdmg7XFxuICAgIGZvbnQtZmFtaWx5OiBWZXJkYW5hLCBHZW5ldmEsIFRhaG9tYSwgc2Fucy1zZXJpZjtcXG4gICAgZGlzcGxheTogZ3JpZDtcXG4gICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAxZnIgM2ZyO1xcbiAgICBncmlkLXRlbXBsYXRlLXJvd3M6IGF1dG8gMWZyO1xcbn1cXG5cXG4uaGVhZGVyIHtcXG4gICAgY29sb3I6IHdoaXRlO1xcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IGRhcmtzbGF0ZWdyYXk7XFxuICAgIHBhZGRpbmc6IDEwcHg7XFxuICAgIGdyaWQtY29sdW1uOiAxIC8gLTE7XFxufVxcblxcbi5saXN0LWNvbnRlbnQge1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBsaWdodGdyYXk7XFxuICAgIHBhZGRpbmc6IDEwcHg7XFxufVxcblxcbi5hZGQtbGlzdC1jb250ZW50IHtcXG4gICAgbWFyZ2luLWJvdHRvbTogMTBweDtcXG4gICAgZGlzcGxheTogZ3JpZDtcXG4gICAgcGxhY2UtaXRlbXM6IGNlbnRlcjtcXG59XFxuXFxuLmFkZC1saXN0LWJ1dHRvbiB7XFxuICAgIGNvbG9yOiB3aGl0ZTtcXG4gICAgZm9udC1zaXplOiAxLjVyZW07XFxuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMTZhMzRhO1xcbiAgICBwYWRkaW5nOiA1cHggMTBweDtcXG4gICAgYm9yZGVyOiBub25lO1xcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7XFxufVxcblxcbi5hZGQtbGlzdC1tb2RhbCxcXG4uZWRpdC1saXN0LWl0ZW0tbW9kYWwge1xcbiAgICBib3JkZXI6IG5vbmU7XFxuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcXG4gICAgbWFyZ2luOiBhdXRvO1xcblxcbiAgICAmOjpiYWNrZHJvcCB7XFxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuNSlcXG4gICAgfVxcbn1cXG5cXG4uYWRkLWxpc3QtZm9ybSxcXG4uZWRpdC1saXN0LWl0ZW0tZm9ybSB7XFxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcXG4gICAgcGFkZGluZzogMTBweDtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgZ2FwOiAxMHB4O1xcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcblxcbiAgICAmIGgxIHtcXG4gICAgICAgIGZvbnQtc2l6ZTogMnJlbTtcXG4gICAgICAgIGNvbG9yOiBkYXJrc2xhdGVncmV5O1xcbiAgICB9XFxufVxcblxcbi5hZGQtbGlzdC1pbnB1dCxcXG4uZWRpdC1saXN0LWl0ZW0taW5wdXQge1xcbiAgICBmb250LXNpemU6IDEuMnJlbTtcXG4gICAgcGFkZGluZzogNXB4IDEwcHg7XFxuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcXG59XFxuXFxuLmFkZC1saXN0LXN1Ym1pdC1idXR0b24sXFxuLmFkZC1saXN0LWNhbmNlbC1idXR0b24sXFxuLmVkaXQtbGlzdC1pdGVtLXN1Ym1pdC1idXR0b24sXFxuLmVkaXQtbGlzdC1pdGVtLWNhbmNlbC1idXR0b24ge1xcbiAgICBmb250LXNpemU6IDEuMnJlbTtcXG4gICAgY29sb3I6IHdoaXRlO1xcbiAgICBmb250LXdlaWdodDogYm9sZDtcXG4gICAgcGFkZGluZzogNXB4IDA7XFxuICAgIGJvcmRlcjogbm9uZTtcXG4gICAgYm9yZGVyLXJhZGl1czogNXB4O1xcbn1cXG5cXG4uYWRkLWxpc3Qtc3VibWl0LWJ1dHRvbixcXG4uZWRpdC1saXN0LWl0ZW0tc3VibWl0LWJ1dHRvbiAge1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjM2I4MmY2O1xcbn1cXG5cXG4uYWRkLWxpc3QtY2FuY2VsLWJ1dHRvbixcXG4uZWRpdC1saXN0LWl0ZW0tY2FuY2VsLWJ1dHRvbiB7XFxuICAgIGJhY2tncm91bmQtY29sb3I6ICNlZjQ0NDQ7XFxufVxcblxcbi5saXN0LWNvbnRhaW5lciB7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxuICAgIGdhcDogMTBweDtcXG59XFxuXFxuLmxpc3QtaXRlbS1jb250YWluZXIge1xcbiAgICBmb250LXNpemU6IDEuNXJlbTtcXG4gICAgcGFkZGluZzogMTBweDtcXG4gICAgYm9yZGVyLXJhZGl1czogNXB4O1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBnYXA6IDEwcHg7XFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICAgIFxcbiAgICAmIC5saXN0LWl0ZW0ge1xcbiAgICAgICAgd2lkdGg6IDEwMCU7XFxuICAgIH1cXG5cXG4gICAgJiAuZGVsZXRlLWxpc3QtaXRlbS1idXR0b24sXFxuICAgICYgLmVkaXQtbGlzdC1pdGVtLWJ1dHRvbiB7XFxuICAgICAgICB3aWR0aDogMS4ycmVtO1xcbiAgICAgICAgaGVpZ2h0OiAxLjJyZW07XFxuICAgICAgICBib3JkZXI6IG5vbmU7XFxuICAgIH1cXG5cXG4gICAgJiAuZGVsZXRlLWxpc3QtaXRlbS1idXR0b24ge1xcbiAgICAgICAgYmFja2dyb3VuZDogdXJsKFxcXCIuL3Jlc291cmNlcy9kZWxldGUtaWNvbi5zdmdcXFwiKSBuby1yZXBlYXQ7XFxuICAgIH1cXG5cXG4gICAgJiAuZWRpdC1saXN0LWl0ZW0tYnV0dG9uIHtcXG4gICAgICAgIGJhY2tncm91bmQ6IHVybChcXFwiLi9yZXNvdXJjZXMvZWRpdC1pY29uLnN2Z1xcXCIpIG5vLXJlcGVhdDtcXG4gICAgfVxcblxcbiAgICAmOmhvdmVyIHtcXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwgMCwgMCwgMC4yKTtcXG4gICAgfVxcbn1cXG5cXG4udGFzay1jb250ZW50IHtcXG4gICAgcGFkZGluZzogMTBweDtcXG59XCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsIlwidXNlIHN0cmljdFwiO1xuXG4vKlxuICBNSVQgTGljZW5zZSBodHRwOi8vd3d3Lm9wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL21pdC1saWNlbnNlLnBocFxuICBBdXRob3IgVG9iaWFzIEtvcHBlcnMgQHNva3JhXG4qL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoY3NzV2l0aE1hcHBpbmdUb1N0cmluZykge1xuICB2YXIgbGlzdCA9IFtdO1xuXG4gIC8vIHJldHVybiB0aGUgbGlzdCBvZiBtb2R1bGVzIGFzIGNzcyBzdHJpbmdcbiAgbGlzdC50b1N0cmluZyA9IGZ1bmN0aW9uIHRvU3RyaW5nKCkge1xuICAgIHJldHVybiB0aGlzLm1hcChmdW5jdGlvbiAoaXRlbSkge1xuICAgICAgdmFyIGNvbnRlbnQgPSBcIlwiO1xuICAgICAgdmFyIG5lZWRMYXllciA9IHR5cGVvZiBpdGVtWzVdICE9PSBcInVuZGVmaW5lZFwiO1xuICAgICAgaWYgKGl0ZW1bNF0pIHtcbiAgICAgICAgY29udGVudCArPSBcIkBzdXBwb3J0cyAoXCIuY29uY2F0KGl0ZW1bNF0sIFwiKSB7XCIpO1xuICAgICAgfVxuICAgICAgaWYgKGl0ZW1bMl0pIHtcbiAgICAgICAgY29udGVudCArPSBcIkBtZWRpYSBcIi5jb25jYXQoaXRlbVsyXSwgXCIge1wiKTtcbiAgICAgIH1cbiAgICAgIGlmIChuZWVkTGF5ZXIpIHtcbiAgICAgICAgY29udGVudCArPSBcIkBsYXllclwiLmNvbmNhdChpdGVtWzVdLmxlbmd0aCA+IDAgPyBcIiBcIi5jb25jYXQoaXRlbVs1XSkgOiBcIlwiLCBcIiB7XCIpO1xuICAgICAgfVxuICAgICAgY29udGVudCArPSBjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKGl0ZW0pO1xuICAgICAgaWYgKG5lZWRMYXllcikge1xuICAgICAgICBjb250ZW50ICs9IFwifVwiO1xuICAgICAgfVxuICAgICAgaWYgKGl0ZW1bMl0pIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cbiAgICAgIGlmIChpdGVtWzRdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJ9XCI7XG4gICAgICB9XG4gICAgICByZXR1cm4gY29udGVudDtcbiAgICB9KS5qb2luKFwiXCIpO1xuICB9O1xuXG4gIC8vIGltcG9ydCBhIGxpc3Qgb2YgbW9kdWxlcyBpbnRvIHRoZSBsaXN0XG4gIGxpc3QuaSA9IGZ1bmN0aW9uIGkobW9kdWxlcywgbWVkaWEsIGRlZHVwZSwgc3VwcG9ydHMsIGxheWVyKSB7XG4gICAgaWYgKHR5cGVvZiBtb2R1bGVzID09PSBcInN0cmluZ1wiKSB7XG4gICAgICBtb2R1bGVzID0gW1tudWxsLCBtb2R1bGVzLCB1bmRlZmluZWRdXTtcbiAgICB9XG4gICAgdmFyIGFscmVhZHlJbXBvcnRlZE1vZHVsZXMgPSB7fTtcbiAgICBpZiAoZGVkdXBlKSB7XG4gICAgICBmb3IgKHZhciBrID0gMDsgayA8IHRoaXMubGVuZ3RoOyBrKyspIHtcbiAgICAgICAgdmFyIGlkID0gdGhpc1trXVswXTtcbiAgICAgICAgaWYgKGlkICE9IG51bGwpIHtcbiAgICAgICAgICBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2lkXSA9IHRydWU7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gICAgZm9yICh2YXIgX2sgPSAwOyBfayA8IG1vZHVsZXMubGVuZ3RoOyBfaysrKSB7XG4gICAgICB2YXIgaXRlbSA9IFtdLmNvbmNhdChtb2R1bGVzW19rXSk7XG4gICAgICBpZiAoZGVkdXBlICYmIGFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaXRlbVswXV0pIHtcbiAgICAgICAgY29udGludWU7XG4gICAgICB9XG4gICAgICBpZiAodHlwZW9mIGxheWVyICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgIGlmICh0eXBlb2YgaXRlbVs1XSA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICAgIGl0ZW1bNV0gPSBsYXllcjtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzFdID0gXCJAbGF5ZXJcIi5jb25jYXQoaXRlbVs1XS5sZW5ndGggPiAwID8gXCIgXCIuY29uY2F0KGl0ZW1bNV0pIDogXCJcIiwgXCIge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bNV0gPSBsYXllcjtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgaWYgKG1lZGlhKSB7XG4gICAgICAgIGlmICghaXRlbVsyXSkge1xuICAgICAgICAgIGl0ZW1bMl0gPSBtZWRpYTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzFdID0gXCJAbWVkaWEgXCIuY29uY2F0KGl0ZW1bMl0sIFwiIHtcIikuY29uY2F0KGl0ZW1bMV0sIFwifVwiKTtcbiAgICAgICAgICBpdGVtWzJdID0gbWVkaWE7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGlmIChzdXBwb3J0cykge1xuICAgICAgICBpZiAoIWl0ZW1bNF0pIHtcbiAgICAgICAgICBpdGVtWzRdID0gXCJcIi5jb25jYXQoc3VwcG9ydHMpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMV0gPSBcIkBzdXBwb3J0cyAoXCIuY29uY2F0KGl0ZW1bNF0sIFwiKSB7XCIpLmNvbmNhdChpdGVtWzFdLCBcIn1cIik7XG4gICAgICAgICAgaXRlbVs0XSA9IHN1cHBvcnRzO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBsaXN0LnB1c2goaXRlbSk7XG4gICAgfVxuICB9O1xuICByZXR1cm4gbGlzdDtcbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKHVybCwgb3B0aW9ucykge1xuICBpZiAoIW9wdGlvbnMpIHtcbiAgICBvcHRpb25zID0ge307XG4gIH1cbiAgaWYgKCF1cmwpIHtcbiAgICByZXR1cm4gdXJsO1xuICB9XG4gIHVybCA9IFN0cmluZyh1cmwuX19lc01vZHVsZSA/IHVybC5kZWZhdWx0IDogdXJsKTtcblxuICAvLyBJZiB1cmwgaXMgYWxyZWFkeSB3cmFwcGVkIGluIHF1b3RlcywgcmVtb3ZlIHRoZW1cbiAgaWYgKC9eWydcIl0uKlsnXCJdJC8udGVzdCh1cmwpKSB7XG4gICAgdXJsID0gdXJsLnNsaWNlKDEsIC0xKTtcbiAgfVxuICBpZiAob3B0aW9ucy5oYXNoKSB7XG4gICAgdXJsICs9IG9wdGlvbnMuaGFzaDtcbiAgfVxuXG4gIC8vIFNob3VsZCB1cmwgYmUgd3JhcHBlZD9cbiAgLy8gU2VlIGh0dHBzOi8vZHJhZnRzLmNzc3dnLm9yZy9jc3MtdmFsdWVzLTMvI3VybHNcbiAgaWYgKC9bXCInKCkgXFx0XFxuXXwoJTIwKS8udGVzdCh1cmwpIHx8IG9wdGlvbnMubmVlZFF1b3Rlcykge1xuICAgIHJldHVybiBcIlxcXCJcIi5jb25jYXQodXJsLnJlcGxhY2UoL1wiL2csICdcXFxcXCInKS5yZXBsYWNlKC9cXG4vZywgXCJcXFxcblwiKSwgXCJcXFwiXCIpO1xuICB9XG4gIHJldHVybiB1cmw7XG59OyIsIlwidXNlIHN0cmljdFwiO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdGVtKSB7XG4gIHZhciBjb250ZW50ID0gaXRlbVsxXTtcbiAgdmFyIGNzc01hcHBpbmcgPSBpdGVtWzNdO1xuICBpZiAoIWNzc01hcHBpbmcpIHtcbiAgICByZXR1cm4gY29udGVudDtcbiAgfVxuICBpZiAodHlwZW9mIGJ0b2EgPT09IFwiZnVuY3Rpb25cIikge1xuICAgIHZhciBiYXNlNjQgPSBidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShjc3NNYXBwaW5nKSkpKTtcbiAgICB2YXIgZGF0YSA9IFwic291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsXCIuY29uY2F0KGJhc2U2NCk7XG4gICAgdmFyIHNvdXJjZU1hcHBpbmcgPSBcIi8qIyBcIi5jb25jYXQoZGF0YSwgXCIgKi9cIik7XG4gICAgcmV0dXJuIFtjb250ZW50XS5jb25jYXQoW3NvdXJjZU1hcHBpbmddKS5qb2luKFwiXFxuXCIpO1xuICB9XG4gIHJldHVybiBbY29udGVudF0uam9pbihcIlxcblwiKTtcbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciBzdHlsZXNJbkRPTSA9IFtdO1xuZnVuY3Rpb24gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcikge1xuICB2YXIgcmVzdWx0ID0gLTE7XG4gIGZvciAodmFyIGkgPSAwOyBpIDwgc3R5bGVzSW5ET00ubGVuZ3RoOyBpKyspIHtcbiAgICBpZiAoc3R5bGVzSW5ET01baV0uaWRlbnRpZmllciA9PT0gaWRlbnRpZmllcikge1xuICAgICAgcmVzdWx0ID0gaTtcbiAgICAgIGJyZWFrO1xuICAgIH1cbiAgfVxuICByZXR1cm4gcmVzdWx0O1xufVxuZnVuY3Rpb24gbW9kdWxlc1RvRG9tKGxpc3QsIG9wdGlvbnMpIHtcbiAgdmFyIGlkQ291bnRNYXAgPSB7fTtcbiAgdmFyIGlkZW50aWZpZXJzID0gW107XG4gIGZvciAodmFyIGkgPSAwOyBpIDwgbGlzdC5sZW5ndGg7IGkrKykge1xuICAgIHZhciBpdGVtID0gbGlzdFtpXTtcbiAgICB2YXIgaWQgPSBvcHRpb25zLmJhc2UgPyBpdGVtWzBdICsgb3B0aW9ucy5iYXNlIDogaXRlbVswXTtcbiAgICB2YXIgY291bnQgPSBpZENvdW50TWFwW2lkXSB8fCAwO1xuICAgIHZhciBpZGVudGlmaWVyID0gXCJcIi5jb25jYXQoaWQsIFwiIFwiKS5jb25jYXQoY291bnQpO1xuICAgIGlkQ291bnRNYXBbaWRdID0gY291bnQgKyAxO1xuICAgIHZhciBpbmRleEJ5SWRlbnRpZmllciA9IGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpO1xuICAgIHZhciBvYmogPSB7XG4gICAgICBjc3M6IGl0ZW1bMV0sXG4gICAgICBtZWRpYTogaXRlbVsyXSxcbiAgICAgIHNvdXJjZU1hcDogaXRlbVszXSxcbiAgICAgIHN1cHBvcnRzOiBpdGVtWzRdLFxuICAgICAgbGF5ZXI6IGl0ZW1bNV1cbiAgICB9O1xuICAgIGlmIChpbmRleEJ5SWRlbnRpZmllciAhPT0gLTEpIHtcbiAgICAgIHN0eWxlc0luRE9NW2luZGV4QnlJZGVudGlmaWVyXS5yZWZlcmVuY2VzKys7XG4gICAgICBzdHlsZXNJbkRPTVtpbmRleEJ5SWRlbnRpZmllcl0udXBkYXRlcihvYmopO1xuICAgIH0gZWxzZSB7XG4gICAgICB2YXIgdXBkYXRlciA9IGFkZEVsZW1lbnRTdHlsZShvYmosIG9wdGlvbnMpO1xuICAgICAgb3B0aW9ucy5ieUluZGV4ID0gaTtcbiAgICAgIHN0eWxlc0luRE9NLnNwbGljZShpLCAwLCB7XG4gICAgICAgIGlkZW50aWZpZXI6IGlkZW50aWZpZXIsXG4gICAgICAgIHVwZGF0ZXI6IHVwZGF0ZXIsXG4gICAgICAgIHJlZmVyZW5jZXM6IDFcbiAgICAgIH0pO1xuICAgIH1cbiAgICBpZGVudGlmaWVycy5wdXNoKGlkZW50aWZpZXIpO1xuICB9XG4gIHJldHVybiBpZGVudGlmaWVycztcbn1cbmZ1bmN0aW9uIGFkZEVsZW1lbnRTdHlsZShvYmosIG9wdGlvbnMpIHtcbiAgdmFyIGFwaSA9IG9wdGlvbnMuZG9tQVBJKG9wdGlvbnMpO1xuICBhcGkudXBkYXRlKG9iaik7XG4gIHZhciB1cGRhdGVyID0gZnVuY3Rpb24gdXBkYXRlcihuZXdPYmopIHtcbiAgICBpZiAobmV3T2JqKSB7XG4gICAgICBpZiAobmV3T2JqLmNzcyA9PT0gb2JqLmNzcyAmJiBuZXdPYmoubWVkaWEgPT09IG9iai5tZWRpYSAmJiBuZXdPYmouc291cmNlTWFwID09PSBvYmouc291cmNlTWFwICYmIG5ld09iai5zdXBwb3J0cyA9PT0gb2JqLnN1cHBvcnRzICYmIG5ld09iai5sYXllciA9PT0gb2JqLmxheWVyKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICAgIGFwaS51cGRhdGUob2JqID0gbmV3T2JqKTtcbiAgICB9IGVsc2Uge1xuICAgICAgYXBpLnJlbW92ZSgpO1xuICAgIH1cbiAgfTtcbiAgcmV0dXJuIHVwZGF0ZXI7XG59XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChsaXN0LCBvcHRpb25zKSB7XG4gIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xuICBsaXN0ID0gbGlzdCB8fCBbXTtcbiAgdmFyIGxhc3RJZGVudGlmaWVycyA9IG1vZHVsZXNUb0RvbShsaXN0LCBvcHRpb25zKTtcbiAgcmV0dXJuIGZ1bmN0aW9uIHVwZGF0ZShuZXdMaXN0KSB7XG4gICAgbmV3TGlzdCA9IG5ld0xpc3QgfHwgW107XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBsYXN0SWRlbnRpZmllcnMubGVuZ3RoOyBpKyspIHtcbiAgICAgIHZhciBpZGVudGlmaWVyID0gbGFzdElkZW50aWZpZXJzW2ldO1xuICAgICAgdmFyIGluZGV4ID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcik7XG4gICAgICBzdHlsZXNJbkRPTVtpbmRleF0ucmVmZXJlbmNlcy0tO1xuICAgIH1cbiAgICB2YXIgbmV3TGFzdElkZW50aWZpZXJzID0gbW9kdWxlc1RvRG9tKG5ld0xpc3QsIG9wdGlvbnMpO1xuICAgIGZvciAodmFyIF9pID0gMDsgX2kgPCBsYXN0SWRlbnRpZmllcnMubGVuZ3RoOyBfaSsrKSB7XG4gICAgICB2YXIgX2lkZW50aWZpZXIgPSBsYXN0SWRlbnRpZmllcnNbX2ldO1xuICAgICAgdmFyIF9pbmRleCA9IGdldEluZGV4QnlJZGVudGlmaWVyKF9pZGVudGlmaWVyKTtcbiAgICAgIGlmIChzdHlsZXNJbkRPTVtfaW5kZXhdLnJlZmVyZW5jZXMgPT09IDApIHtcbiAgICAgICAgc3R5bGVzSW5ET01bX2luZGV4XS51cGRhdGVyKCk7XG4gICAgICAgIHN0eWxlc0luRE9NLnNwbGljZShfaW5kZXgsIDEpO1xuICAgICAgfVxuICAgIH1cbiAgICBsYXN0SWRlbnRpZmllcnMgPSBuZXdMYXN0SWRlbnRpZmllcnM7XG4gIH07XG59OyIsIlwidXNlIHN0cmljdFwiO1xuXG52YXIgbWVtbyA9IHt9O1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGdldFRhcmdldCh0YXJnZXQpIHtcbiAgaWYgKHR5cGVvZiBtZW1vW3RhcmdldF0gPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICB2YXIgc3R5bGVUYXJnZXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHRhcmdldCk7XG5cbiAgICAvLyBTcGVjaWFsIGNhc2UgdG8gcmV0dXJuIGhlYWQgb2YgaWZyYW1lIGluc3RlYWQgb2YgaWZyYW1lIGl0c2VsZlxuICAgIGlmICh3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQgJiYgc3R5bGVUYXJnZXQgaW5zdGFuY2VvZiB3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQpIHtcbiAgICAgIHRyeSB7XG4gICAgICAgIC8vIFRoaXMgd2lsbCB0aHJvdyBhbiBleGNlcHRpb24gaWYgYWNjZXNzIHRvIGlmcmFtZSBpcyBibG9ja2VkXG4gICAgICAgIC8vIGR1ZSB0byBjcm9zcy1vcmlnaW4gcmVzdHJpY3Rpb25zXG4gICAgICAgIHN0eWxlVGFyZ2V0ID0gc3R5bGVUYXJnZXQuY29udGVudERvY3VtZW50LmhlYWQ7XG4gICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIC8vIGlzdGFuYnVsIGlnbm9yZSBuZXh0XG4gICAgICAgIHN0eWxlVGFyZ2V0ID0gbnVsbDtcbiAgICAgIH1cbiAgICB9XG4gICAgbWVtb1t0YXJnZXRdID0gc3R5bGVUYXJnZXQ7XG4gIH1cbiAgcmV0dXJuIG1lbW9bdGFyZ2V0XTtcbn1cblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBpbnNlcnRCeVNlbGVjdG9yKGluc2VydCwgc3R5bGUpIHtcbiAgdmFyIHRhcmdldCA9IGdldFRhcmdldChpbnNlcnQpO1xuICBpZiAoIXRhcmdldCkge1xuICAgIHRocm93IG5ldyBFcnJvcihcIkNvdWxkbid0IGZpbmQgYSBzdHlsZSB0YXJnZXQuIFRoaXMgcHJvYmFibHkgbWVhbnMgdGhhdCB0aGUgdmFsdWUgZm9yIHRoZSAnaW5zZXJ0JyBwYXJhbWV0ZXIgaXMgaW52YWxpZC5cIik7XG4gIH1cbiAgdGFyZ2V0LmFwcGVuZENoaWxkKHN0eWxlKTtcbn1cbm1vZHVsZS5leHBvcnRzID0gaW5zZXJ0QnlTZWxlY3RvcjsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBpbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucykge1xuICB2YXIgZWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzdHlsZVwiKTtcbiAgb3B0aW9ucy5zZXRBdHRyaWJ1dGVzKGVsZW1lbnQsIG9wdGlvbnMuYXR0cmlidXRlcyk7XG4gIG9wdGlvbnMuaW5zZXJ0KGVsZW1lbnQsIG9wdGlvbnMub3B0aW9ucyk7XG4gIHJldHVybiBlbGVtZW50O1xufVxubW9kdWxlLmV4cG9ydHMgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzKHN0eWxlRWxlbWVudCkge1xuICB2YXIgbm9uY2UgPSB0eXBlb2YgX193ZWJwYWNrX25vbmNlX18gIT09IFwidW5kZWZpbmVkXCIgPyBfX3dlYnBhY2tfbm9uY2VfXyA6IG51bGw7XG4gIGlmIChub25jZSkge1xuICAgIHN0eWxlRWxlbWVudC5zZXRBdHRyaWJ1dGUoXCJub25jZVwiLCBub25jZSk7XG4gIH1cbn1cbm1vZHVsZS5leHBvcnRzID0gc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzOyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGFwcGx5KHN0eWxlRWxlbWVudCwgb3B0aW9ucywgb2JqKSB7XG4gIHZhciBjc3MgPSBcIlwiO1xuICBpZiAob2JqLnN1cHBvcnRzKSB7XG4gICAgY3NzICs9IFwiQHN1cHBvcnRzIChcIi5jb25jYXQob2JqLnN1cHBvcnRzLCBcIikge1wiKTtcbiAgfVxuICBpZiAob2JqLm1lZGlhKSB7XG4gICAgY3NzICs9IFwiQG1lZGlhIFwiLmNvbmNhdChvYmoubWVkaWEsIFwiIHtcIik7XG4gIH1cbiAgdmFyIG5lZWRMYXllciA9IHR5cGVvZiBvYmoubGF5ZXIgIT09IFwidW5kZWZpbmVkXCI7XG4gIGlmIChuZWVkTGF5ZXIpIHtcbiAgICBjc3MgKz0gXCJAbGF5ZXJcIi5jb25jYXQob2JqLmxheWVyLmxlbmd0aCA+IDAgPyBcIiBcIi5jb25jYXQob2JqLmxheWVyKSA6IFwiXCIsIFwiIHtcIik7XG4gIH1cbiAgY3NzICs9IG9iai5jc3M7XG4gIGlmIChuZWVkTGF5ZXIpIHtcbiAgICBjc3MgKz0gXCJ9XCI7XG4gIH1cbiAgaWYgKG9iai5tZWRpYSkge1xuICAgIGNzcyArPSBcIn1cIjtcbiAgfVxuICBpZiAob2JqLnN1cHBvcnRzKSB7XG4gICAgY3NzICs9IFwifVwiO1xuICB9XG4gIHZhciBzb3VyY2VNYXAgPSBvYmouc291cmNlTWFwO1xuICBpZiAoc291cmNlTWFwICYmIHR5cGVvZiBidG9hICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgY3NzICs9IFwiXFxuLyojIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxcIi5jb25jYXQoYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoc291cmNlTWFwKSkpKSwgXCIgKi9cIik7XG4gIH1cblxuICAvLyBGb3Igb2xkIElFXG4gIC8qIGlzdGFuYnVsIGlnbm9yZSBpZiAgKi9cbiAgb3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybShjc3MsIHN0eWxlRWxlbWVudCwgb3B0aW9ucy5vcHRpb25zKTtcbn1cbmZ1bmN0aW9uIHJlbW92ZVN0eWxlRWxlbWVudChzdHlsZUVsZW1lbnQpIHtcbiAgLy8gaXN0YW5idWwgaWdub3JlIGlmXG4gIGlmIChzdHlsZUVsZW1lbnQucGFyZW50Tm9kZSA9PT0gbnVsbCkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuICBzdHlsZUVsZW1lbnQucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChzdHlsZUVsZW1lbnQpO1xufVxuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGRvbUFQSShvcHRpb25zKSB7XG4gIGlmICh0eXBlb2YgZG9jdW1lbnQgPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICByZXR1cm4ge1xuICAgICAgdXBkYXRlOiBmdW5jdGlvbiB1cGRhdGUoKSB7fSxcbiAgICAgIHJlbW92ZTogZnVuY3Rpb24gcmVtb3ZlKCkge31cbiAgICB9O1xuICB9XG4gIHZhciBzdHlsZUVsZW1lbnQgPSBvcHRpb25zLmluc2VydFN0eWxlRWxlbWVudChvcHRpb25zKTtcbiAgcmV0dXJuIHtcbiAgICB1cGRhdGU6IGZ1bmN0aW9uIHVwZGF0ZShvYmopIHtcbiAgICAgIGFwcGx5KHN0eWxlRWxlbWVudCwgb3B0aW9ucywgb2JqKTtcbiAgICB9LFxuICAgIHJlbW92ZTogZnVuY3Rpb24gcmVtb3ZlKCkge1xuICAgICAgcmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlRWxlbWVudCk7XG4gICAgfVxuICB9O1xufVxubW9kdWxlLmV4cG9ydHMgPSBkb21BUEk7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gc3R5bGVUYWdUcmFuc2Zvcm0oY3NzLCBzdHlsZUVsZW1lbnQpIHtcbiAgaWYgKHN0eWxlRWxlbWVudC5zdHlsZVNoZWV0KSB7XG4gICAgc3R5bGVFbGVtZW50LnN0eWxlU2hlZXQuY3NzVGV4dCA9IGNzcztcbiAgfSBlbHNlIHtcbiAgICB3aGlsZSAoc3R5bGVFbGVtZW50LmZpcnN0Q2hpbGQpIHtcbiAgICAgIHN0eWxlRWxlbWVudC5yZW1vdmVDaGlsZChzdHlsZUVsZW1lbnQuZmlyc3RDaGlsZCk7XG4gICAgfVxuICAgIHN0eWxlRWxlbWVudC5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShjc3MpKTtcbiAgfVxufVxubW9kdWxlLmV4cG9ydHMgPSBzdHlsZVRhZ1RyYW5zZm9ybTsiLCIvLyBUaGUgbW9kdWxlIGNhY2hlXG52YXIgX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fID0ge307XG5cbi8vIFRoZSByZXF1aXJlIGZ1bmN0aW9uXG5mdW5jdGlvbiBfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKSB7XG5cdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuXHR2YXIgY2FjaGVkTW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXTtcblx0aWYgKGNhY2hlZE1vZHVsZSAhPT0gdW5kZWZpbmVkKSB7XG5cdFx0cmV0dXJuIGNhY2hlZE1vZHVsZS5leHBvcnRzO1xuXHR9XG5cdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG5cdHZhciBtb2R1bGUgPSBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdID0ge1xuXHRcdGlkOiBtb2R1bGVJZCxcblx0XHQvLyBubyBtb2R1bGUubG9hZGVkIG5lZWRlZFxuXHRcdGV4cG9ydHM6IHt9XG5cdH07XG5cblx0Ly8gRXhlY3V0ZSB0aGUgbW9kdWxlIGZ1bmN0aW9uXG5cdF9fd2VicGFja19tb2R1bGVzX19bbW9kdWxlSWRdKG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pO1xuXG5cdC8vIFJldHVybiB0aGUgZXhwb3J0cyBvZiB0aGUgbW9kdWxlXG5cdHJldHVybiBtb2R1bGUuZXhwb3J0cztcbn1cblxuLy8gZXhwb3NlIHRoZSBtb2R1bGVzIG9iamVjdCAoX193ZWJwYWNrX21vZHVsZXNfXylcbl9fd2VicGFja19yZXF1aXJlX18ubSA9IF9fd2VicGFja19tb2R1bGVzX187XG5cbiIsIi8vIGdldERlZmF1bHRFeHBvcnQgZnVuY3Rpb24gZm9yIGNvbXBhdGliaWxpdHkgd2l0aCBub24taGFybW9ueSBtb2R1bGVzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLm4gPSAobW9kdWxlKSA9PiB7XG5cdHZhciBnZXR0ZXIgPSBtb2R1bGUgJiYgbW9kdWxlLl9fZXNNb2R1bGUgP1xuXHRcdCgpID0+IChtb2R1bGVbJ2RlZmF1bHQnXSkgOlxuXHRcdCgpID0+IChtb2R1bGUpO1xuXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQoZ2V0dGVyLCB7IGE6IGdldHRlciB9KTtcblx0cmV0dXJuIGdldHRlcjtcbn07IiwiLy8gZGVmaW5lIGdldHRlciBmdW5jdGlvbnMgZm9yIGhhcm1vbnkgZXhwb3J0c1xuX193ZWJwYWNrX3JlcXVpcmVfXy5kID0gKGV4cG9ydHMsIGRlZmluaXRpb24pID0+IHtcblx0Zm9yKHZhciBrZXkgaW4gZGVmaW5pdGlvbikge1xuXHRcdGlmKF9fd2VicGFja19yZXF1aXJlX18ubyhkZWZpbml0aW9uLCBrZXkpICYmICFfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZXhwb3J0cywga2V5KSkge1xuXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIGtleSwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGRlZmluaXRpb25ba2V5XSB9KTtcblx0XHR9XG5cdH1cbn07IiwiX193ZWJwYWNrX3JlcXVpcmVfXy5nID0gKGZ1bmN0aW9uKCkge1xuXHRpZiAodHlwZW9mIGdsb2JhbFRoaXMgPT09ICdvYmplY3QnKSByZXR1cm4gZ2xvYmFsVGhpcztcblx0dHJ5IHtcblx0XHRyZXR1cm4gdGhpcyB8fCBuZXcgRnVuY3Rpb24oJ3JldHVybiB0aGlzJykoKTtcblx0fSBjYXRjaCAoZSkge1xuXHRcdGlmICh0eXBlb2Ygd2luZG93ID09PSAnb2JqZWN0JykgcmV0dXJuIHdpbmRvdztcblx0fVxufSkoKTsiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLm8gPSAob2JqLCBwcm9wKSA9PiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwgcHJvcCkpIiwidmFyIHNjcmlwdFVybDtcbmlmIChfX3dlYnBhY2tfcmVxdWlyZV9fLmcuaW1wb3J0U2NyaXB0cykgc2NyaXB0VXJsID0gX193ZWJwYWNrX3JlcXVpcmVfXy5nLmxvY2F0aW9uICsgXCJcIjtcbnZhciBkb2N1bWVudCA9IF9fd2VicGFja19yZXF1aXJlX18uZy5kb2N1bWVudDtcbmlmICghc2NyaXB0VXJsICYmIGRvY3VtZW50KSB7XG5cdGlmIChkb2N1bWVudC5jdXJyZW50U2NyaXB0KVxuXHRcdHNjcmlwdFVybCA9IGRvY3VtZW50LmN1cnJlbnRTY3JpcHQuc3JjO1xuXHRpZiAoIXNjcmlwdFVybCkge1xuXHRcdHZhciBzY3JpcHRzID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoXCJzY3JpcHRcIik7XG5cdFx0aWYoc2NyaXB0cy5sZW5ndGgpIHtcblx0XHRcdHZhciBpID0gc2NyaXB0cy5sZW5ndGggLSAxO1xuXHRcdFx0d2hpbGUgKGkgPiAtMSAmJiAhc2NyaXB0VXJsKSBzY3JpcHRVcmwgPSBzY3JpcHRzW2ktLV0uc3JjO1xuXHRcdH1cblx0fVxufVxuLy8gV2hlbiBzdXBwb3J0aW5nIGJyb3dzZXJzIHdoZXJlIGFuIGF1dG9tYXRpYyBwdWJsaWNQYXRoIGlzIG5vdCBzdXBwb3J0ZWQgeW91IG11c3Qgc3BlY2lmeSBhbiBvdXRwdXQucHVibGljUGF0aCBtYW51YWxseSB2aWEgY29uZmlndXJhdGlvblxuLy8gb3IgcGFzcyBhbiBlbXB0eSBzdHJpbmcgKFwiXCIpIGFuZCBzZXQgdGhlIF9fd2VicGFja19wdWJsaWNfcGF0aF9fIHZhcmlhYmxlIGZyb20geW91ciBjb2RlIHRvIHVzZSB5b3VyIG93biBsb2dpYy5cbmlmICghc2NyaXB0VXJsKSB0aHJvdyBuZXcgRXJyb3IoXCJBdXRvbWF0aWMgcHVibGljUGF0aCBpcyBub3Qgc3VwcG9ydGVkIGluIHRoaXMgYnJvd3NlclwiKTtcbnNjcmlwdFVybCA9IHNjcmlwdFVybC5yZXBsYWNlKC8jLiokLywgXCJcIikucmVwbGFjZSgvXFw/LiokLywgXCJcIikucmVwbGFjZSgvXFwvW15cXC9dKyQvLCBcIi9cIik7XG5fX3dlYnBhY2tfcmVxdWlyZV9fLnAgPSBzY3JpcHRVcmw7IiwiX193ZWJwYWNrX3JlcXVpcmVfXy5iID0gZG9jdW1lbnQuYmFzZVVSSSB8fCBzZWxmLmxvY2F0aW9uLmhyZWY7XG5cbi8vIG9iamVjdCB0byBzdG9yZSBsb2FkZWQgYW5kIGxvYWRpbmcgY2h1bmtzXG4vLyB1bmRlZmluZWQgPSBjaHVuayBub3QgbG9hZGVkLCBudWxsID0gY2h1bmsgcHJlbG9hZGVkL3ByZWZldGNoZWRcbi8vIFtyZXNvbHZlLCByZWplY3QsIFByb21pc2VdID0gY2h1bmsgbG9hZGluZywgMCA9IGNodW5rIGxvYWRlZFxudmFyIGluc3RhbGxlZENodW5rcyA9IHtcblx0MTc5OiAwXG59O1xuXG4vLyBubyBjaHVuayBvbiBkZW1hbmQgbG9hZGluZ1xuXG4vLyBubyBwcmVmZXRjaGluZ1xuXG4vLyBubyBwcmVsb2FkZWRcblxuLy8gbm8gSE1SXG5cbi8vIG5vIEhNUiBtYW5pZmVzdFxuXG4vLyBubyBvbiBjaHVua3MgbG9hZGVkXG5cbi8vIG5vIGpzb25wIGZ1bmN0aW9uIiwiX193ZWJwYWNrX3JlcXVpcmVfXy5uYyA9IHVuZGVmaW5lZDsiLCJleHBvcnQgY2xhc3MgVGFzayB7XG4gICAgY29uc3RydWN0b3IodGl0bGUsIGRlc2NyaXB0aW9uKSB7XG4gICAgICAgIHRoaXMudGl0bGUgPSB0aXRsZTtcbiAgICAgICAgdGhpcy5kZXNjcmlwdGlvbiA9IGRlc2NyaXB0aW9uO1xuICAgICAgICB0aGlzLmRhdGUgPSBuZXcgRGF0ZSgpLnRvRGF0ZVN0cmluZygpO1xuICAgICAgICB0aGlzLmNvbXBsZXRlID0gZmFsc2U7XG4gICAgfVxuXG4gICAgbWFya0FzQ29tcGxldGUoKSB7XG4gICAgICAgIHRoaXMuY29tcGxldGUgPSB0cnVlO1xuICAgIH1cblxuICAgIHVwZGF0ZVRhc2sodGl0bGUsIGRlc2NyaXB0aW9uKSB7XG4gICAgICAgIHRoaXMudGl0bGUgPSB0aXRsZTtcbiAgICAgICAgdGhpcy5kZXNjcmlwdGlvbiA9IGRlc2NyaXB0aW9uO1xuICAgIH1cbn1cbiIsIlxuICAgICAgaW1wb3J0IEFQSSBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiO1xuICAgICAgaW1wb3J0IGRvbUFQSSBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0Rm4gZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzXCI7XG4gICAgICBpbXBvcnQgc2V0QXR0cmlidXRlcyBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydFN0eWxlRWxlbWVudCBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qc1wiO1xuICAgICAgaW1wb3J0IHN0eWxlVGFnVHJhbnNmb3JtRm4gZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qc1wiO1xuICAgICAgaW1wb3J0IGNvbnRlbnQsICogYXMgbmFtZWRFeHBvcnQgZnJvbSBcIiEhLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9zdHlsZS5jc3NcIjtcbiAgICAgIFxuICAgICAgXG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0gPSBzdHlsZVRhZ1RyYW5zZm9ybUZuO1xub3B0aW9ucy5zZXRBdHRyaWJ1dGVzID0gc2V0QXR0cmlidXRlcztcblxuICAgICAgb3B0aW9ucy5pbnNlcnQgPSBpbnNlcnRGbi5iaW5kKG51bGwsIFwiaGVhZFwiKTtcbiAgICBcbm9wdGlvbnMuZG9tQVBJID0gZG9tQVBJO1xub3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7XG5cbnZhciB1cGRhdGUgPSBBUEkoY29udGVudCwgb3B0aW9ucyk7XG5cblxuXG5leHBvcnQgKiBmcm9tIFwiISEuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL3N0eWxlLmNzc1wiO1xuICAgICAgIGV4cG9ydCBkZWZhdWx0IGNvbnRlbnQgJiYgY29udGVudC5sb2NhbHMgPyBjb250ZW50LmxvY2FscyA6IHVuZGVmaW5lZDtcbiIsImltcG9ydCB7IFRvZG9MaXN0IH0gZnJvbSBcIi4vdG9kby1saXN0XCI7XG5pbXBvcnQgeyBMaXN0Q29udGVudCB9IGZyb20gXCIuL2xpc3QtY29udGVudFwiO1xuaW1wb3J0IFwiLi9zdHlsZS5jc3NcIjtcblxuY29uc3QgdG9kb0xpc3QgPSBuZXcgVG9kb0xpc3Q7XG5cbnRvZG9MaXN0LmNyZWF0ZUxpc3QoXCJ0ZXN0TGlzdDFcIik7XG50b2RvTGlzdC5jcmVhdGVMaXN0KFwidGVzdExpc3QyXCIpO1xudG9kb0xpc3QuY3JlYXRlTGlzdChcInRlc3RMaXN0M1wiKTtcblxudG9kb0xpc3QuY3JlYXRlTGlzdFRhc2soXCJ0ZXN0TGlzdDFcIiwgXCJ0ZXN0TGlzdDFUaXRsZTFcIiwgXCJ0ZXN0TGlzdDFEZXNjcmlwdGlvbjFcIik7XG50b2RvTGlzdC5jcmVhdGVMaXN0VGFzayhcInRlc3RMaXN0MVwiLCBcInRlc3RMaXN0MVRpdGxlMlwiLCBcInRlc3RMaXN0MURlc2NyaXB0aW9uMlwiKTtcbnRvZG9MaXN0LmNyZWF0ZUxpc3RUYXNrKFwidGVzdExpc3QxXCIsIFwidGVzdExpc3QxVGl0bGUzXCIsIFwidGVzdExpc3QxRGVzY3JpcHRpb24zXCIpO1xuXG50b2RvTGlzdC5jcmVhdGVMaXN0VGFzayhcInRlc3RMaXN0MlwiLCBcInRlc3RMaXN0MlRpdGxlMVwiLCBcInRlc3RMaXN0MkRlc2NyaXB0aW9uMVwiKTtcbnRvZG9MaXN0LmNyZWF0ZUxpc3RUYXNrKFwidGVzdExpc3QyXCIsIFwidGVzdExpc3QyVGl0bGUyXCIsIFwidGVzdExpc3QyRGVzY3JpcHRpb24yXCIpO1xudG9kb0xpc3QuY3JlYXRlTGlzdFRhc2soXCJ0ZXN0TGlzdDJcIiwgXCJ0ZXN0TGlzdDJUaXRsZTNcIiwgXCJ0ZXN0TGlzdDJEZXNjcmlwdGlvbjNcIik7XG5cbnRvZG9MaXN0LmNyZWF0ZUxpc3RUYXNrKFwidGVzdExpc3QzXCIsIFwidGVzdExpc3QzVGl0bGUxXCIsIFwidGVzdExpc3QzRGVzY3JpcHRpb24xXCIpO1xudG9kb0xpc3QuY3JlYXRlTGlzdFRhc2soXCJ0ZXN0TGlzdDNcIiwgXCJ0ZXN0TGlzdDNUaXRsZTJcIiwgXCJ0ZXN0TGlzdDNEZXNjcmlwdGlvbjJcIik7XG50b2RvTGlzdC5jcmVhdGVMaXN0VGFzayhcInRlc3RMaXN0M1wiLCBcInRlc3RMaXN0M1RpdGxlM1wiLCBcInRlc3RMaXN0M0Rlc2NyaXB0aW9uM1wiKTtcblxuLy8gdGFzay5nZXRMaXN0VGFzayhcInRlc3RMaXN0MlwiLCBcInRlc3RUaXRsZTFcIikudXBkYXRlVGFzayhcInVwZGF0ZWRUZXN0VGl0bGUxXCIsIFwidXBkYXRlZFRlc3REZXNjcmlwdGlvbjFcIik7XG4vLyB0YXNrLmRlbGV0ZUxpc3RUYXNrKFwidGVzdExpc3QyXCIsIFwidGVzdFRpdGxlMlwiKTtcblxuLy8gY29uc29sZS5sb2codGFzay5nZXRMaXN0VGFzayhcInRlc3RMaXN0MlwiLCBcInRlc3RUaXRsZTFcIikpO1xuLy8gY29uc29sZS5sb2codGFzay5nZXRMaXN0KFwidGVzdExpc3QyXCIpKTtcblxuTGlzdENvbnRlbnQodG9kb0xpc3QpO1xuY29uc29sZS5sb2codG9kb0xpc3QpOyIsImltcG9ydCB7IFRhc2sgfSBmcm9tIFwiLi90YXNrXCI7XG5cbmV4cG9ydCBjbGFzcyBUb2RvTGlzdCB7XG5cbiAgICBsaXN0ID0gW107XG5cbiAgICBjcmVhdGVMaXN0KGxpc3ROYW1lKSB7XG4gICAgICAgIHRoaXMubGlzdC5wdXNoKHtbbGlzdE5hbWVdOiBbXX0pO1xuICAgIH1cblxuICAgIGdldExpc3QobGlzdE5hbWUpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMubGlzdC5maW5kKGl0ZW0gPT4gaXRlbVtsaXN0TmFtZV0pW2xpc3ROYW1lXTtcbiAgICB9XG5cbiAgICByZW5hbWVMaXN0KG9sZExpc3ROYW1lLCBuZXdMaXN0TmFtZSkge1xuICAgICAgICB0aGlzLmxpc3QuZmluZCgoaXRlbSkgPT4ge1xuICAgICAgICAgICAgaWYgKGl0ZW1bb2xkTGlzdE5hbWVdKSB7XG4gICAgICAgICAgICAgICAgaXRlbVtuZXdMaXN0TmFtZV0gPSBpdGVtW29sZExpc3ROYW1lXTtcbiAgICAgICAgICAgICAgICBkZWxldGUgaXRlbVtvbGRMaXN0TmFtZV07XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgIH1cblxuICAgIGRlbGV0ZUxpc3QobGlzdE5hbWUpIHtcbiAgICAgICAgdGhpcy5saXN0LnNwbGljZSh0aGlzLmxpc3QuZmluZEluZGV4KChpdGVtKSA9PiBpdGVtW2xpc3ROYW1lXSksIDEpO1xuICAgIH1cblxuICAgIGNyZWF0ZUxpc3RUYXNrKGxpc3ROYW1lLCB0aXRsZSwgZGVzY3JpcHRpb24pIHtcbiAgICAgICAgaWYgKHRoaXMuZ2V0TGlzdChsaXN0TmFtZSkpIHtcbiAgICAgICAgICAgIHRoaXMuZ2V0TGlzdChsaXN0TmFtZSkucHVzaChuZXcgVGFzayh0aXRsZSwgZGVzY3JpcHRpb24pKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGdldExpc3RUYXNrKGxpc3ROYW1lLCB0YXNrVGl0bGUpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZ2V0TGlzdChsaXN0TmFtZSkuZmluZChlbGVtZW50ID0+IGVsZW1lbnRbXCJ0aXRsZVwiXSA9PT0gdGFza1RpdGxlKTtcbiAgICB9XG5cbiAgICBkZWxldGVMaXN0VGFzayhsaXN0TmFtZSwgdGFza1RpdGxlKSB7XG4gICAgICAgIHRoaXMuZ2V0TGlzdChsaXN0TmFtZSkuc3BsaWNlKFxuICAgICAgICAgICAgdGhpcy5nZXRMaXN0KGxpc3ROYW1lKS5maW5kSW5kZXgoaXRlbSA9PiBpdGVtID09PSB0aGlzLmdldExpc3RUYXNrKGxpc3ROYW1lLCB0YXNrVGl0bGUpKSwgMVxuICAgICAgICApO1xuICAgIH1cbn0iLCJpbXBvcnQgeyBUYXNrQ29udGVudCB9IGZyb20gXCIuL3Rhc2stY29udGVudFwiO1xuXG5leHBvcnQgZnVuY3Rpb24gTGlzdENvbnRlbnQodG9kb0xpc3QpIHtcbiAgICBjb25zdCBsaXN0Q29udGFpbmVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5saXN0LWNvbnRhaW5lclwiKTtcbiAgICBjb25zdCBhZGRMaXN0QnV0dG9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5hZGQtbGlzdC1idXR0b25cIik7XG4gICAgY29uc3QgYWRkTGlzdE1vZGFsID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5hZGQtbGlzdC1tb2RhbFwiKTtcbiAgICBjb25zdCBhZGRMaXN0U3VibWl0QnV0dG9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5hZGQtbGlzdC1zdWJtaXQtYnV0dG9uXCIpO1xuICAgIGNvbnN0IGFkZExpc3RJbnB1dCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuYWRkLWxpc3QtaW5wdXRcIik7XG5cbiAgICBmdW5jdGlvbiByZW5kZXJMaXN0Q29udGFpbmVyKGxpc3QpIHtcbiAgICAgICAgbGlzdC5mb3JFYWNoKGl0ZW0gPT4ge1xuICAgICAgICAgICAgdXBkYXRlTGlzdENvbnRhaW5lcihPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyhpdGVtKSk7XG4gICAgICAgIH0pO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIHVwZGF0ZUxpc3RDb250YWluZXIoaXRlbSkge1xuICAgICAgICBjb25zdCBsaXN0SXRlbSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJwXCIpO1xuICAgICAgICBjb25zdCBkZWxldGVMaXN0SXRlbUJ1dHRvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJidXR0b25cIik7XG4gICAgICAgIGNvbnN0IGVkaXRMaXN0SXRlbUJ1dHRvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJidXR0b25cIik7XG4gICAgICAgIGNvbnN0IGVkaXRMaXN0SXRlbU1vZGFsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpYWxvZ1wiKTtcbiAgICAgICAgY29uc3QgZWRpdExpc3RJdGVtRm9ybSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJmb3JtXCIpO1xuICAgICAgICBjb25zdCBlZGl0TGlzdEl0ZW1Gb3JtVGl0bGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaDFcIik7XG4gICAgICAgIGNvbnN0IGVkaXRMaXN0SXRlbUlucHV0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImlucHV0XCIpO1xuICAgICAgICBjb25zdCBlZGl0TGlzdEl0ZW1TdWJtaXRCdXR0b24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiYnV0dG9uXCIpO1xuICAgICAgICBjb25zdCBlZGl0TGlzdEl0ZW1DYW5jZWxCdXR0b24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiYnV0dG9uXCIpO1xuICAgICAgICBjb25zdCBsaXN0SXRlbUNvbnRhaW5lciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG5cbiAgICAgICAgbGlzdEl0ZW0udGV4dENvbnRlbnQgPSBpdGVtO1xuICAgICAgICBlZGl0TGlzdEl0ZW1Gb3JtVGl0bGUudGV4dENvbnRlbnQgPSBcIkVkaXQgTGlzdFwiO1xuICAgICAgICBlZGl0TGlzdEl0ZW1TdWJtaXRCdXR0b24udGV4dENvbnRlbnQgPSBcIlN1Ym1pdFwiO1xuICAgICAgICBlZGl0TGlzdEl0ZW1DYW5jZWxCdXR0b24udGV4dENvbnRlbnQgPSBcIkNhbmNlbFwiO1xuXG4gICAgICAgIGxpc3RJdGVtLmNsYXNzTGlzdC5hZGQoXCJsaXN0LWl0ZW1cIik7XG4gICAgICAgIGRlbGV0ZUxpc3RJdGVtQnV0dG9uLmNsYXNzTGlzdC5hZGQoXCJkZWxldGUtbGlzdC1pdGVtLWJ1dHRvblwiKTtcbiAgICAgICAgZWRpdExpc3RJdGVtQnV0dG9uLmNsYXNzTGlzdC5hZGQoXCJlZGl0LWxpc3QtaXRlbS1idXR0b25cIik7XG4gICAgICAgIGVkaXRMaXN0SXRlbU1vZGFsLmNsYXNzTGlzdC5hZGQoXCJlZGl0LWxpc3QtaXRlbS1tb2RhbFwiKTtcbiAgICAgICAgZWRpdExpc3RJdGVtRm9ybS5jbGFzc0xpc3QuYWRkKFwiZWRpdC1saXN0LWl0ZW0tZm9ybVwiKTtcbiAgICAgICAgZWRpdExpc3RJdGVtSW5wdXQuY2xhc3NMaXN0LmFkZChcImVkaXQtbGlzdC1pdGVtLWlucHV0XCIpO1xuICAgICAgICBlZGl0TGlzdEl0ZW1TdWJtaXRCdXR0b24uY2xhc3NMaXN0LmFkZChcImVkaXQtbGlzdC1pdGVtLXN1Ym1pdC1idXR0b25cIik7XG4gICAgICAgIGVkaXRMaXN0SXRlbUNhbmNlbEJ1dHRvbi5jbGFzc0xpc3QuYWRkKFwiZWRpdC1saXN0LWl0ZW0tY2FuY2VsLWJ1dHRvblwiKTtcbiAgICAgICAgbGlzdEl0ZW1Db250YWluZXIuY2xhc3NMaXN0LmFkZChcImxpc3QtaXRlbS1jb250YWluZXJcIik7XG5cbiAgICAgICAgZWRpdExpc3RJdGVtRm9ybS5zZXRBdHRyaWJ1dGUoXCJtZXRob2RcIiwgXCJkaWFsb2dcIik7XG4gICAgICAgIGVkaXRMaXN0SXRlbUlucHV0LnNldEF0dHJpYnV0ZShcInBsYWNlaG9sZGVyXCIsIFwiTmV3IExpc3QgTmFtZVwiKTtcblxuICAgICAgICBkZWxldGVMaXN0SXRlbShkZWxldGVMaXN0SXRlbUJ1dHRvbik7XG4gICAgICAgIGVkaXRMaXN0SXRlbShcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBsaXN0SXRlbSxcbiAgICAgICAgICAgICAgICBlZGl0TGlzdEl0ZW1CdXR0b24sIFxuICAgICAgICAgICAgICAgIGVkaXRMaXN0SXRlbU1vZGFsLCBcbiAgICAgICAgICAgICAgICBlZGl0TGlzdEl0ZW1JbnB1dCwgXG4gICAgICAgICAgICAgICAgZWRpdExpc3RJdGVtU3VibWl0QnV0dG9uXG4gICAgICAgICAgICB9XG4gICAgICAgICk7XG4gICAgICAgIFRhc2tDb250ZW50KHRvZG9MaXN0LCBsaXN0SXRlbSk7XG5cbiAgICAgICAgbGlzdEl0ZW1Db250YWluZXIuYXBwZW5kQ2hpbGQobGlzdEl0ZW0pO1xuICAgICAgICBsaXN0SXRlbUNvbnRhaW5lci5hcHBlbmRDaGlsZChkZWxldGVMaXN0SXRlbUJ1dHRvbik7XG4gICAgICAgIGxpc3RJdGVtQ29udGFpbmVyLmFwcGVuZENoaWxkKGVkaXRMaXN0SXRlbUJ1dHRvbik7XG4gICAgICAgIGVkaXRMaXN0SXRlbUZvcm0uYXBwZW5kQ2hpbGQoZWRpdExpc3RJdGVtRm9ybVRpdGxlKTtcbiAgICAgICAgZWRpdExpc3RJdGVtRm9ybS5hcHBlbmRDaGlsZChlZGl0TGlzdEl0ZW1JbnB1dCk7XG4gICAgICAgIGVkaXRMaXN0SXRlbUZvcm0uYXBwZW5kQ2hpbGQoZWRpdExpc3RJdGVtU3VibWl0QnV0dG9uKTtcbiAgICAgICAgZWRpdExpc3RJdGVtRm9ybS5hcHBlbmRDaGlsZChlZGl0TGlzdEl0ZW1DYW5jZWxCdXR0b24pO1xuICAgICAgICBlZGl0TGlzdEl0ZW1Nb2RhbC5hcHBlbmRDaGlsZChlZGl0TGlzdEl0ZW1Gb3JtKTtcbiAgICAgICAgbGlzdEl0ZW1Db250YWluZXIuYXBwZW5kQ2hpbGQoZWRpdExpc3RJdGVtTW9kYWwpO1xuICAgICAgICBsaXN0Q29udGFpbmVyLmFwcGVuZENoaWxkKGxpc3RJdGVtQ29udGFpbmVyKTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBhZGRMaXN0SXRlbShpdGVtKSB7XG4gICAgICAgIGFkZExpc3RCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgYWRkTGlzdE1vZGFsLnNob3dNb2RhbCgpO1xuICAgICAgICB9KTtcbiAgICAgICAgXG4gICAgICAgIGFkZExpc3RTdWJtaXRCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgaWYgKGFkZExpc3RJbnB1dC52YWx1ZSkge1xuICAgICAgICAgICAgICAgIGl0ZW0uY3JlYXRlTGlzdChhZGRMaXN0SW5wdXQudmFsdWUpO1xuICAgICAgICAgICAgICAgIHVwZGF0ZUxpc3RDb250YWluZXIoYWRkTGlzdElucHV0LnZhbHVlKTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgYWxlcnQoXCJQbGVhc2UgcHJvdmlkZSBhIGxpc3QgbmFtZVwiKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gZGVsZXRlTGlzdEl0ZW0oZGVsZXRlTGlzdEl0ZW1CdXR0b24pIHtcbiAgICAgICAgZGVsZXRlTGlzdEl0ZW1CdXR0b24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgdG9kb0xpc3QuZGVsZXRlTGlzdCh0aGlzLnByZXZpb3VzRWxlbWVudFNpYmxpbmcudGV4dENvbnRlbnQpO1xuICAgICAgICAgICAgdGhpcy5wYXJlbnRFbGVtZW50LnJlbW92ZSgpO1xuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBlZGl0TGlzdEl0ZW0oaXRlbSkge1xuICAgICAgICBpdGVtLmVkaXRMaXN0SXRlbUJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICBpdGVtLmVkaXRMaXN0SXRlbU1vZGFsLnNob3dNb2RhbCgpO1xuICAgICAgICAgICAgaXRlbS5lZGl0TGlzdEl0ZW1TdWJtaXRCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICAgIGlmIChpdGVtLmVkaXRMaXN0SXRlbUlucHV0LnZhbHVlKSB7XG4gICAgICAgICAgICAgICAgICAgIHRvZG9MaXN0LnJlbmFtZUxpc3QoaXRlbS5saXN0SXRlbS50ZXh0Q29udGVudCwgaXRlbS5lZGl0TGlzdEl0ZW1JbnB1dC52YWx1ZSk7XG4gICAgICAgICAgICAgICAgICAgIGl0ZW0ubGlzdEl0ZW0udGV4dENvbnRlbnQgPSBpdGVtLmVkaXRMaXN0SXRlbUlucHV0LnZhbHVlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICByZW5kZXJMaXN0Q29udGFpbmVyKHRvZG9MaXN0Lmxpc3QpO1xuICAgIGFkZExpc3RJdGVtKHRvZG9MaXN0KTtcbn0iLCJleHBvcnQgZnVuY3Rpb24gVGFza0NvbnRlbnQodG9kb0xpc3QsIGxpc3RJdGVtKSB7XG4gICAgY29uc3QgdGFza0NvbnRhaW5lciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIudGFzay1jb250YWluZXJcIik7XG4gICAgY29uc3QgdGFza0xpc3RUaXRsZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIudGFzay1saXN0LXRpdGxlXCIpO1xuXG4gICAgbGlzdEl0ZW0uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIGZ1bmN0aW9uKCkge1xuICAgICAgICB0YXNrTGlzdFRpdGxlLnRleHRDb250ZW50ID0gdGhpcy50ZXh0Q29udGVudDtcbiAgICAgICAgaWYgKHRhc2tDb250YWluZXIuY2hpbGRyZW4ubGVuZ3RoID09PSAwKSB7XG4gICAgICAgICAgICB0YXNrQ29udGFpbmVyLmFwcGVuZENoaWxkKFxuICAgICAgICAgICAgcmVuZGVyVGFza0NvbnRhaW5lcih0aGlzLnRleHRDb250ZW50LCB0b2RvTGlzdC5nZXRMaXN0KHRoaXMudGV4dENvbnRlbnQpKSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB0YXNrQ29udGFpbmVyLnJlcGxhY2VDaGlsZChcbiAgICAgICAgICAgICAgICByZW5kZXJUYXNrQ29udGFpbmVyKHRoaXMudGV4dENvbnRlbnQsIHRvZG9MaXN0LmdldExpc3QodGhpcy50ZXh0Q29udGVudCkpLFxuICAgICAgICAgICAgICAgIHRhc2tDb250YWluZXIuY2hpbGRyZW5bMF0pO1xuICAgICAgICB9XG4gICAgfSk7XG5cbiAgICBmdW5jdGlvbiByZW5kZXJUYXNrQ29udGFpbmVyKGxpc3RJdGVtLCB0YXNrKSB7XG4gICAgICAgIGNvbnN0IGxpc3RUYXNrID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcblxuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHRhc2subGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIGNvbnN0IHRhc2tDb250ZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgICAgICAgICAgIGNvbnN0IHRhc2tUaXRsZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJoM1wiKTtcbiAgICAgICAgICAgIGNvbnN0IHRhc2tEZXNjcmlwdGlvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJwXCIpO1xuICAgICAgICAgICAgY29uc3QgdGFza0RhdGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwicFwiKTtcblxuICAgICAgICAgICAgdGFza1RpdGxlLnRleHRDb250ZW50ID0gdG9kb0xpc3QuZ2V0TGlzdFRhc2sobGlzdEl0ZW0sIHRhc2tbaV0udGl0bGUpLnRpdGxlO1xuICAgICAgICAgICAgdGFza0Rlc2NyaXB0aW9uLnRleHRDb250ZW50ID0gdG9kb0xpc3QuZ2V0TGlzdFRhc2sobGlzdEl0ZW0sIHRhc2tbaV0udGl0bGUpLmRlc2NyaXB0aW9uO1xuICAgICAgICAgICAgdGFza0RhdGUudGV4dENvbnRlbnQgPSB0b2RvTGlzdC5nZXRMaXN0VGFzayhsaXN0SXRlbSwgdGFza1tpXS50aXRsZSkuZGF0ZTtcblxuICAgICAgICAgICAgdGFza0NvbnRlbnQuYXBwZW5kQ2hpbGQodGFza1RpdGxlKTtcbiAgICAgICAgICAgIHRhc2tDb250ZW50LmFwcGVuZENoaWxkKHRhc2tEZXNjcmlwdGlvbik7XG4gICAgICAgICAgICB0YXNrQ29udGVudC5hcHBlbmRDaGlsZCh0YXNrRGF0ZSk7XG4gICAgICAgICAgICBsaXN0VGFzay5hcHBlbmRDaGlsZCh0YXNrQ29udGVudCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGxpc3RUYXNrO1xuICAgIH1cbn0iXSwibmFtZXMiOlsiX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzBfX18iLCJVUkwiLCJfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMV9fXyIsIl9fX0NTU19MT0FERVJfRVhQT1JUX19fIiwiX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMF9fXyIsIl9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzFfX18iLCJwdXNoIiwibW9kdWxlIiwiaWQiLCJleHBvcnRzIiwiY3NzV2l0aE1hcHBpbmdUb1N0cmluZyIsImxpc3QiLCJ0b1N0cmluZyIsInRoaXMiLCJtYXAiLCJpdGVtIiwiY29udGVudCIsIm5lZWRMYXllciIsImNvbmNhdCIsImxlbmd0aCIsImpvaW4iLCJpIiwibW9kdWxlcyIsIm1lZGlhIiwiZGVkdXBlIiwic3VwcG9ydHMiLCJsYXllciIsInVuZGVmaW5lZCIsImFscmVhZHlJbXBvcnRlZE1vZHVsZXMiLCJrIiwiX2siLCJ1cmwiLCJvcHRpb25zIiwiU3RyaW5nIiwiX19lc01vZHVsZSIsImRlZmF1bHQiLCJ0ZXN0Iiwic2xpY2UiLCJoYXNoIiwibmVlZFF1b3RlcyIsInJlcGxhY2UiLCJjc3NNYXBwaW5nIiwiYnRvYSIsImJhc2U2NCIsInVuZXNjYXBlIiwiZW5jb2RlVVJJQ29tcG9uZW50IiwiSlNPTiIsInN0cmluZ2lmeSIsImRhdGEiLCJzb3VyY2VNYXBwaW5nIiwic3R5bGVzSW5ET00iLCJnZXRJbmRleEJ5SWRlbnRpZmllciIsImlkZW50aWZpZXIiLCJyZXN1bHQiLCJtb2R1bGVzVG9Eb20iLCJpZENvdW50TWFwIiwiaWRlbnRpZmllcnMiLCJiYXNlIiwiY291bnQiLCJpbmRleEJ5SWRlbnRpZmllciIsIm9iaiIsImNzcyIsInNvdXJjZU1hcCIsInJlZmVyZW5jZXMiLCJ1cGRhdGVyIiwiYWRkRWxlbWVudFN0eWxlIiwiYnlJbmRleCIsInNwbGljZSIsImFwaSIsImRvbUFQSSIsInVwZGF0ZSIsIm5ld09iaiIsInJlbW92ZSIsImxhc3RJZGVudGlmaWVycyIsIm5ld0xpc3QiLCJpbmRleCIsIm5ld0xhc3RJZGVudGlmaWVycyIsIl9pIiwiX2luZGV4IiwibWVtbyIsImluc2VydCIsInN0eWxlIiwidGFyZ2V0Iiwic3R5bGVUYXJnZXQiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJ3aW5kb3ciLCJIVE1MSUZyYW1lRWxlbWVudCIsImNvbnRlbnREb2N1bWVudCIsImhlYWQiLCJlIiwiZ2V0VGFyZ2V0IiwiRXJyb3IiLCJhcHBlbmRDaGlsZCIsImVsZW1lbnQiLCJjcmVhdGVFbGVtZW50Iiwic2V0QXR0cmlidXRlcyIsImF0dHJpYnV0ZXMiLCJzdHlsZUVsZW1lbnQiLCJub25jZSIsInNldEF0dHJpYnV0ZSIsImluc2VydFN0eWxlRWxlbWVudCIsInN0eWxlVGFnVHJhbnNmb3JtIiwiYXBwbHkiLCJwYXJlbnROb2RlIiwicmVtb3ZlQ2hpbGQiLCJyZW1vdmVTdHlsZUVsZW1lbnQiLCJzdHlsZVNoZWV0IiwiY3NzVGV4dCIsImZpcnN0Q2hpbGQiLCJjcmVhdGVUZXh0Tm9kZSIsIl9fd2VicGFja19tb2R1bGVfY2FjaGVfXyIsIl9fd2VicGFja19yZXF1aXJlX18iLCJtb2R1bGVJZCIsImNhY2hlZE1vZHVsZSIsIl9fd2VicGFja19tb2R1bGVzX18iLCJtIiwibiIsImdldHRlciIsImQiLCJhIiwiZGVmaW5pdGlvbiIsImtleSIsIm8iLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImVudW1lcmFibGUiLCJnZXQiLCJnIiwiZ2xvYmFsVGhpcyIsIkZ1bmN0aW9uIiwicHJvcCIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsInNjcmlwdFVybCIsImltcG9ydFNjcmlwdHMiLCJsb2NhdGlvbiIsImN1cnJlbnRTY3JpcHQiLCJzcmMiLCJzY3JpcHRzIiwiZ2V0RWxlbWVudHNCeVRhZ05hbWUiLCJwIiwiYiIsImJhc2VVUkkiLCJzZWxmIiwiaHJlZiIsIm5jIiwiVGFzayIsImNvbnN0cnVjdG9yIiwidGl0bGUiLCJkZXNjcmlwdGlvbiIsImRhdGUiLCJEYXRlIiwidG9EYXRlU3RyaW5nIiwiY29tcGxldGUiLCJtYXJrQXNDb21wbGV0ZSIsInVwZGF0ZVRhc2siLCJsb2NhbHMiLCJ0b2RvTGlzdCIsImNyZWF0ZUxpc3QiLCJsaXN0TmFtZSIsImdldExpc3QiLCJmaW5kIiwicmVuYW1lTGlzdCIsIm9sZExpc3ROYW1lIiwibmV3TGlzdE5hbWUiLCJkZWxldGVMaXN0IiwiZmluZEluZGV4IiwiY3JlYXRlTGlzdFRhc2siLCJnZXRMaXN0VGFzayIsInRhc2tUaXRsZSIsImRlbGV0ZUxpc3RUYXNrIiwibGlzdENvbnRhaW5lciIsImFkZExpc3RCdXR0b24iLCJhZGRMaXN0TW9kYWwiLCJhZGRMaXN0U3VibWl0QnV0dG9uIiwiYWRkTGlzdElucHV0IiwidXBkYXRlTGlzdENvbnRhaW5lciIsImxpc3RJdGVtIiwiZGVsZXRlTGlzdEl0ZW1CdXR0b24iLCJlZGl0TGlzdEl0ZW1CdXR0b24iLCJlZGl0TGlzdEl0ZW1Nb2RhbCIsImVkaXRMaXN0SXRlbUZvcm0iLCJlZGl0TGlzdEl0ZW1Gb3JtVGl0bGUiLCJlZGl0TGlzdEl0ZW1JbnB1dCIsImVkaXRMaXN0SXRlbVN1Ym1pdEJ1dHRvbiIsImVkaXRMaXN0SXRlbUNhbmNlbEJ1dHRvbiIsImxpc3RJdGVtQ29udGFpbmVyIiwidGV4dENvbnRlbnQiLCJjbGFzc0xpc3QiLCJhZGQiLCJhZGRFdmVudExpc3RlbmVyIiwicHJldmlvdXNFbGVtZW50U2libGluZyIsInBhcmVudEVsZW1lbnQiLCJkZWxldGVMaXN0SXRlbSIsInNob3dNb2RhbCIsInZhbHVlIiwiZWRpdExpc3RJdGVtIiwidGFza0NvbnRhaW5lciIsInRhc2tMaXN0VGl0bGUiLCJyZW5kZXJUYXNrQ29udGFpbmVyIiwidGFzayIsImxpc3RUYXNrIiwidGFza0NvbnRlbnQiLCJ0YXNrRGVzY3JpcHRpb24iLCJ0YXNrRGF0ZSIsImNoaWxkcmVuIiwicmVwbGFjZUNoaWxkIiwiVGFza0NvbnRlbnQiLCJmb3JFYWNoIiwiZ2V0T3duUHJvcGVydHlOYW1lcyIsImFsZXJ0IiwiTGlzdENvbnRlbnQiLCJjb25zb2xlIiwibG9nIl0sInNvdXJjZVJvb3QiOiIifQ==