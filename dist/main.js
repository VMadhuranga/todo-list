(()=>{"use strict";var t={426:(t,e,n)=>{n.d(e,{Z:()=>m});var i=n(537),s=n.n(i),a=n(645),o=n.n(a),r=n(667),d=n.n(r),c=new URL(n(467),n.b),l=new URL(n(640),n.b),u=o()(s()),A=d()(c),p=d()(l);u.push([t.id,`* {\n    box-sizing: border-box;\n    margin: 0;\n    padding: 0;\n}\n\nbody {\n    height: 100vh;\n    font-family: Verdana, Geneva, Tahoma, sans-serif;\n    display: grid;\n    grid-template-columns: 1fr 3fr;\n    grid-template-rows: auto 1fr;\n}\n\n.header {\n    color: white;\n    text-align: center;\n    background-color: darkslategray;\n    padding: 10px;\n    grid-column: 1 / -1;\n}\n\n.list-content {\n    background-color: lightgray;\n    padding: 10px;\n}\n\n.add-list-content {\n    margin-bottom: 10px;\n    display: grid;\n    place-items: center;\n}\n\n.add-list-button {\n    color: white;\n    font-size: 1.5rem;\n    font-weight: bold;\n    background-color: #16a34a;\n    padding: 5px 10px;\n    border: none;\n    border-radius: 5px;\n}\n\n.add-list-modal,\n.edit-list-item-modal {\n    border: none;\n    border-radius: 5px;\n    margin: auto;\n\n    &::backdrop {\n        background-color: rgba(0, 0, 0, 0.5)\n    }\n}\n\n.add-list-form,\n.edit-list-item-form {\n    text-align: center;\n    padding: 10px;\n    display: flex;\n    gap: 10px;\n    flex-direction: column;\n\n    & h1 {\n        font-size: 2rem;\n        color: darkslategrey;\n    }\n}\n\n.add-list-input,\n.edit-list-item-input {\n    font-size: 1.2rem;\n    padding: 5px 10px;\n    border-radius: 5px;\n}\n\n.add-list-submit-button,\n.add-list-cancel-button,\n.edit-list-item-submit-button,\n.edit-list-item-cancel-button {\n    font-size: 1.2rem;\n    color: white;\n    font-weight: bold;\n    padding: 5px 0;\n    border: none;\n    border-radius: 5px;\n}\n\n.add-list-submit-button,\n.edit-list-item-submit-button  {\n    background-color: #3b82f6;\n}\n\n.add-list-cancel-button,\n.edit-list-item-cancel-button {\n    background-color: #ef4444;\n}\n\n.list-container {\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n}\n\n.list-item-container {\n    font-size: 1.5rem;\n    padding: 10px;\n    border-radius: 5px;\n    display: flex;\n    gap: 10px;\n    align-items: center;\n    \n    & .list-item {\n        width: 100%;\n    }\n\n    & .delete-list-item-button,\n    & .edit-list-item-button {\n        width: 1.2rem;\n        height: 1.2rem;\n        border: none;\n    }\n\n    & .delete-list-item-button {\n        background: url(${A}) no-repeat;\n    }\n\n    & .edit-list-item-button {\n        background: url(${p}) no-repeat;\n    }\n\n    &:hover {\n        background-color: rgba(0, 0, 0, 0.2);\n    }\n}\n\n.task-content {\n    padding: 10px;\n}`,"",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,sBAAsB;IACtB,SAAS;IACT,UAAU;AACd;;AAEA;IACI,aAAa;IACb,gDAAgD;IAChD,aAAa;IACb,8BAA8B;IAC9B,4BAA4B;AAChC;;AAEA;IACI,YAAY;IACZ,kBAAkB;IAClB,+BAA+B;IAC/B,aAAa;IACb,mBAAmB;AACvB;;AAEA;IACI,2BAA2B;IAC3B,aAAa;AACjB;;AAEA;IACI,mBAAmB;IACnB,aAAa;IACb,mBAAmB;AACvB;;AAEA;IACI,YAAY;IACZ,iBAAiB;IACjB,iBAAiB;IACjB,yBAAyB;IACzB,iBAAiB;IACjB,YAAY;IACZ,kBAAkB;AACtB;;AAEA;;IAEI,YAAY;IACZ,kBAAkB;IAClB,YAAY;;IAEZ;QACI;IACJ;AACJ;;AAEA;;IAEI,kBAAkB;IAClB,aAAa;IACb,aAAa;IACb,SAAS;IACT,sBAAsB;;IAEtB;QACI,eAAe;QACf,oBAAoB;IACxB;AACJ;;AAEA;;IAEI,iBAAiB;IACjB,iBAAiB;IACjB,kBAAkB;AACtB;;AAEA;;;;IAII,iBAAiB;IACjB,YAAY;IACZ,iBAAiB;IACjB,cAAc;IACd,YAAY;IACZ,kBAAkB;AACtB;;AAEA;;IAEI,yBAAyB;AAC7B;;AAEA;;IAEI,yBAAyB;AAC7B;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,SAAS;AACb;;AAEA;IACI,iBAAiB;IACjB,aAAa;IACb,kBAAkB;IAClB,aAAa;IACb,SAAS;IACT,mBAAmB;;IAEnB;QACI,WAAW;IACf;;IAEA;;QAEI,aAAa;QACb,cAAc;QACd,YAAY;IAChB;;IAEA;QACI,6DAAwD;IAC5D;;IAEA;QACI,6DAAsD;IAC1D;;IAEA;QACI,oCAAoC;IACxC;AACJ;;AAEA;IACI,aAAa;AACjB",sourcesContent:['* {\n    box-sizing: border-box;\n    margin: 0;\n    padding: 0;\n}\n\nbody {\n    height: 100vh;\n    font-family: Verdana, Geneva, Tahoma, sans-serif;\n    display: grid;\n    grid-template-columns: 1fr 3fr;\n    grid-template-rows: auto 1fr;\n}\n\n.header {\n    color: white;\n    text-align: center;\n    background-color: darkslategray;\n    padding: 10px;\n    grid-column: 1 / -1;\n}\n\n.list-content {\n    background-color: lightgray;\n    padding: 10px;\n}\n\n.add-list-content {\n    margin-bottom: 10px;\n    display: grid;\n    place-items: center;\n}\n\n.add-list-button {\n    color: white;\n    font-size: 1.5rem;\n    font-weight: bold;\n    background-color: #16a34a;\n    padding: 5px 10px;\n    border: none;\n    border-radius: 5px;\n}\n\n.add-list-modal,\n.edit-list-item-modal {\n    border: none;\n    border-radius: 5px;\n    margin: auto;\n\n    &::backdrop {\n        background-color: rgba(0, 0, 0, 0.5)\n    }\n}\n\n.add-list-form,\n.edit-list-item-form {\n    text-align: center;\n    padding: 10px;\n    display: flex;\n    gap: 10px;\n    flex-direction: column;\n\n    & h1 {\n        font-size: 2rem;\n        color: darkslategrey;\n    }\n}\n\n.add-list-input,\n.edit-list-item-input {\n    font-size: 1.2rem;\n    padding: 5px 10px;\n    border-radius: 5px;\n}\n\n.add-list-submit-button,\n.add-list-cancel-button,\n.edit-list-item-submit-button,\n.edit-list-item-cancel-button {\n    font-size: 1.2rem;\n    color: white;\n    font-weight: bold;\n    padding: 5px 0;\n    border: none;\n    border-radius: 5px;\n}\n\n.add-list-submit-button,\n.edit-list-item-submit-button  {\n    background-color: #3b82f6;\n}\n\n.add-list-cancel-button,\n.edit-list-item-cancel-button {\n    background-color: #ef4444;\n}\n\n.list-container {\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n}\n\n.list-item-container {\n    font-size: 1.5rem;\n    padding: 10px;\n    border-radius: 5px;\n    display: flex;\n    gap: 10px;\n    align-items: center;\n    \n    & .list-item {\n        width: 100%;\n    }\n\n    & .delete-list-item-button,\n    & .edit-list-item-button {\n        width: 1.2rem;\n        height: 1.2rem;\n        border: none;\n    }\n\n    & .delete-list-item-button {\n        background: url("./resources/delete-icon.svg") no-repeat;\n    }\n\n    & .edit-list-item-button {\n        background: url("./resources/edit-icon.svg") no-repeat;\n    }\n\n    &:hover {\n        background-color: rgba(0, 0, 0, 0.2);\n    }\n}\n\n.task-content {\n    padding: 10px;\n}'],sourceRoot:""}]);const m=u},645:t=>{t.exports=function(t){var e=[];return e.toString=function(){return this.map((function(e){var n="",i=void 0!==e[5];return e[4]&&(n+="@supports (".concat(e[4],") {")),e[2]&&(n+="@media ".concat(e[2]," {")),i&&(n+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),n+=t(e),i&&(n+="}"),e[2]&&(n+="}"),e[4]&&(n+="}"),n})).join("")},e.i=function(t,n,i,s,a){"string"==typeof t&&(t=[[null,t,void 0]]);var o={};if(i)for(var r=0;r<this.length;r++){var d=this[r][0];null!=d&&(o[d]=!0)}for(var c=0;c<t.length;c++){var l=[].concat(t[c]);i&&o[l[0]]||(void 0!==a&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=a),n&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=n):l[2]=n),s&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=s):l[4]="".concat(s)),e.push(l))}},e}},667:t=>{t.exports=function(t,e){return e||(e={}),t?(t=String(t.__esModule?t.default:t),/^['"].*['"]$/.test(t)&&(t=t.slice(1,-1)),e.hash&&(t+=e.hash),/["'() \t\n]|(%20)/.test(t)||e.needQuotes?'"'.concat(t.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):t):t}},537:t=>{t.exports=function(t){var e=t[1],n=t[3];if(!n)return e;if("function"==typeof btoa){var i=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),s="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(i),a="/*# ".concat(s," */");return[e].concat([a]).join("\n")}return[e].join("\n")}},379:t=>{var e=[];function n(t){for(var n=-1,i=0;i<e.length;i++)if(e[i].identifier===t){n=i;break}return n}function i(t,i){for(var a={},o=[],r=0;r<t.length;r++){var d=t[r],c=i.base?d[0]+i.base:d[0],l=a[c]||0,u="".concat(c," ").concat(l);a[c]=l+1;var A=n(u),p={css:d[1],media:d[2],sourceMap:d[3],supports:d[4],layer:d[5]};if(-1!==A)e[A].references++,e[A].updater(p);else{var m=s(p,i);i.byIndex=r,e.splice(r,0,{identifier:u,updater:m,references:1})}o.push(u)}return o}function s(t,e){var n=e.domAPI(e);return n.update(t),function(e){if(e){if(e.css===t.css&&e.media===t.media&&e.sourceMap===t.sourceMap&&e.supports===t.supports&&e.layer===t.layer)return;n.update(t=e)}else n.remove()}}t.exports=function(t,s){var a=i(t=t||[],s=s||{});return function(t){t=t||[];for(var o=0;o<a.length;o++){var r=n(a[o]);e[r].references--}for(var d=i(t,s),c=0;c<a.length;c++){var l=n(a[c]);0===e[l].references&&(e[l].updater(),e.splice(l,1))}a=d}}},569:t=>{var e={};t.exports=function(t,n){var i=function(t){if(void 0===e[t]){var n=document.querySelector(t);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(t){n=null}e[t]=n}return e[t]}(t);if(!i)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");i.appendChild(n)}},216:t=>{t.exports=function(t){var e=document.createElement("style");return t.setAttributes(e,t.attributes),t.insert(e,t.options),e}},565:(t,e,n)=>{t.exports=function(t){var e=n.nc;e&&t.setAttribute("nonce",e)}},795:t=>{t.exports=function(t){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=t.insertStyleElement(t);return{update:function(n){!function(t,e,n){var i="";n.supports&&(i+="@supports (".concat(n.supports,") {")),n.media&&(i+="@media ".concat(n.media," {"));var s=void 0!==n.layer;s&&(i+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),i+=n.css,s&&(i+="}"),n.media&&(i+="}"),n.supports&&(i+="}");var a=n.sourceMap;a&&"undefined"!=typeof btoa&&(i+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleTagTransform(i,t,e.options)}(e,t,n)},remove:function(){!function(t){if(null===t.parentNode)return!1;t.parentNode.removeChild(t)}(e)}}}},589:t=>{t.exports=function(t,e){if(e.styleSheet)e.styleSheet.cssText=t;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(t))}}},467:(t,e,n)=>{t.exports=n.p+"a0cac0a4ca0232a86a5b.svg"},640:(t,e,n)=>{t.exports=n.p+"ec6f6c24e90698c49d67.svg"}},e={};function n(i){var s=e[i];if(void 0!==s)return s.exports;var a=e[i]={id:i,exports:{}};return t[i](a,a.exports,n),a.exports}n.m=t,n.n=t=>{var e=t&&t.__esModule?()=>t.default:()=>t;return n.d(e,{a:e}),e},n.d=(t,e)=>{for(var i in e)n.o(e,i)&&!n.o(t,i)&&Object.defineProperty(t,i,{enumerable:!0,get:e[i]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(t){if("object"==typeof window)return window}}(),n.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),(()=>{var t;n.g.importScripts&&(t=n.g.location+"");var e=n.g.document;if(!t&&e&&(e.currentScript&&(t=e.currentScript.src),!t)){var i=e.getElementsByTagName("script");if(i.length)for(var s=i.length-1;s>-1&&!t;)t=i[s--].src}if(!t)throw new Error("Automatic publicPath is not supported in this browser");t=t.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),n.p=t})(),n.b=document.baseURI||self.location.href,n.nc=void 0,(()=>{class t{constructor(t,e){this.title=t,this.description=e,this.date=(new Date).toDateString(),this.complete=!1}markAsComplete(){this.complete=!0}updateTask(t,e){this.title=t,this.description=e}}var e=n(379),i=n.n(e),s=n(795),a=n.n(s),o=n(569),r=n.n(o),d=n(565),c=n.n(d),l=n(216),u=n.n(l),A=n(589),p=n.n(A),m=n(426),b={};b.styleTagTransform=p(),b.setAttributes=c(),b.insert=r().bind(null,"head"),b.domAPI=a(),b.insertStyleElement=u(),i()(m.Z,b),m.Z&&m.Z.locals&&m.Z.locals;const h=new class{list=[];createList(t){this.list.push({[t]:[]})}getList(t){return this.list.find((e=>e[t]))[t]}renameList(t,e){this.list.find((n=>{n[t]&&(n[e]=n[t],delete n[t])}))}deleteList(t){this.list.splice(this.list.findIndex((e=>e[t])),1)}createListTask(e,n,i){this.getList(e)&&this.getList(e).push(new t(n,i))}getListTask(t,e){return this.getList(t).find((t=>t.title===e))}deleteListTask(t,e){this.getList(t).splice(this.getList(t).findIndex((n=>n===this.getListTask(t,e))),1)}};h.createList("testList1"),h.createList("testList2"),h.createList("testList3"),h.createListTask("testList1","testList1Title1","testList1Description1"),h.createListTask("testList1","testList1Title2","testList1Description2"),h.createListTask("testList1","testList1Title3","testList1Description3"),h.createListTask("testList2","testList2Title1","testList2Description1"),h.createListTask("testList2","testList2Title2","testList2Description2"),h.createListTask("testList2","testList2Title3","testList2Description3"),h.createListTask("testList3","testList3Title1","testList3Description1"),h.createListTask("testList3","testList3Title2","testList3Description2"),h.createListTask("testList3","testList3Title3","testList3Description3"),function(t){const e=document.querySelector(".list-container"),n=document.querySelector(".add-list-button"),i=document.querySelector(".add-list-modal"),s=document.querySelector(".add-list-submit-button"),a=document.querySelector(".add-list-input");function o(n){const i=document.createElement("p"),s=document.createElement("button"),a=document.createElement("button"),o=document.createElement("dialog"),r=document.createElement("form"),d=document.createElement("h1"),c=document.createElement("input"),l=document.createElement("button"),u=document.createElement("button"),A=document.createElement("div");i.textContent=n,d.textContent="Edit List",l.textContent="Submit",u.textContent="Cancel",i.classList.add("list-item"),s.classList.add("delete-list-item-button"),a.classList.add("edit-list-item-button"),o.classList.add("edit-list-item-modal"),r.classList.add("edit-list-item-form"),c.classList.add("edit-list-item-input"),l.classList.add("edit-list-item-submit-button"),u.classList.add("edit-list-item-cancel-button"),A.classList.add("list-item-container"),r.setAttribute("method","dialog"),c.setAttribute("placeholder","New List Name"),function(e){e.addEventListener("click",(function(){t.deleteList(this.previousElementSibling.textContent),this.parentElement.remove()}))}(s),function(e){e.editListItemButton.addEventListener("click",(function(){e.editListItemModal.showModal(),e.editListItemSubmitButton.addEventListener("click",(function(){e.editListItemInput.value&&(t.renameList(e.listItem.textContent,e.editListItemInput.value),e.listItem.textContent=e.editListItemInput.value)}))}))}({listItem:i,editListItemButton:a,editListItemModal:o,editListItemInput:c,editListItemSubmitButton:l}),function(t,e){const n=document.querySelector(".task-content");function i(e,i){const s=document.createElement("div"),a=document.createElement("div"),o=document.createElement("h2"),r=document.createElement("button");o.textContent=e,r.textContent="Add Task",s.classList.add("task-container"),a.classList.add("task-list-title-content"),o.classList.add("task-list-title"),r.classList.add("add-list-task-button"),a.appendChild(o),a.appendChild(r),s.appendChild(a);for(let n=0;n<i.length;n++){const a=document.createElement("div"),o=document.createElement("h3"),r=document.createElement("p"),d=document.createElement("p"),c=document.createElement("input"),l=document.createElement("label");o.textContent=t.getListTask(e,i[n].title).title,r.textContent=t.getListTask(e,i[n].title).description,d.textContent=`Date: ${t.getListTask(e,i[n].title).date}`,l.textContent="Mark as done: ",c.setAttribute("type","checkbox"),l.setAttribute("id","status"),c.setAttribute("id","status"),a.appendChild(o),a.appendChild(r),a.appendChild(d),l.appendChild(c),a.appendChild(l),s.appendChild(a)}return r.addEventListener("click",(function(){(function(){const t=document.createElement("dialog"),e=document.createElement("form"),i=document.createElement("input"),s=document.createElement("textarea"),a=document.createElement("label"),o=document.createElement("input"),r=document.createElement("button"),d=document.createElement("button");return t.classList.add("add-list-task-modal"),e.classList.add("add-list-task-form"),i.classList.add("add-list-task-title-input"),s.classList.add("add-list-task-description-input"),o.classList.add("add-list-task-date-input"),r.classList.add("add-list-task-submit-button"),d.classList.add("add-list-task-cancel-button"),a.textContent="Set Date",r.textContent="Submit",d.textContent="Cancel",e.setAttribute("method","dialog"),i.setAttribute("placeholder","Title"),s.setAttribute("placeholder","Description"),s.setAttribute("maxlength","100"),o.setAttribute("type","date"),a.setAttribute("id","date"),o.setAttribute("id","date"),submitListTask(),e.appendChild(i),e.appendChild(s),a.appendChild(o),e.appendChild(a),e.appendChild(r),e.appendChild(d),t.appendChild(e),n.appendChild(t),t})().showModal()})),s}e.addEventListener("click",(function(){0===n.children.length?n.appendChild(i(this.textContent,t.getList(this.textContent))):n.replaceChild(i(this.textContent,t.getList(this.textContent)),n.children[0])}))}(t,i),A.appendChild(i),A.appendChild(s),A.appendChild(a),r.appendChild(d),r.appendChild(c),r.appendChild(l),r.appendChild(u),o.appendChild(r),A.appendChild(o),e.appendChild(A)}var r;t.list.forEach((t=>{o(Object.getOwnPropertyNames(t))})),r=t,n.addEventListener("click",(function(){i.showModal()})),s.addEventListener("click",(function(){a.value?(r.createList(a.value),o(a.value)):alert("Please provide a list name")}))}(h),console.log(h)})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,