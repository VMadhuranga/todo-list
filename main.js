(()=>{"use strict";var t={426:(t,e,n)=>{n.d(e,{Z:()=>m});var i=n(537),o=n.n(i),a=n(645),s=n.n(a),r=n(667),d=n.n(r),c=new URL(n(467),n.b),l=new URL(n(640),n.b),u=s()(o()),A=d()(c),p=d()(l);u.push([t.id,`* {\n    box-sizing: border-box;\n    margin: 0;\n    padding: 0;\n}\n\nbody {\n    height: 100vh;\n    font-family: Verdana, Geneva, Tahoma, sans-serif;\n    display: grid;\n    grid-template-columns: 1fr 3fr;\n    grid-template-rows: auto 1fr;\n}\n\n.header {\n    color: white;\n    text-align: center;\n    background-color: darkslategray;\n    padding: 10px;\n    grid-column: 1 / -1;\n}\n\n.list-content {\n    background-color: lightgray;\n    padding: 10px;\n}\n\n.add-list-content {\n    margin-bottom: 10px;\n    display: grid;\n    place-items: center;\n}\n\n.add-list-button {\n    color: white;\n    font-size: 1.5rem;\n    font-weight: bold;\n    background-color: #16a34a;\n    padding: 5px 10px;\n    border: none;\n    border-radius: 5px;\n}\n\n.add-list-modal,\n.edit-list-item-modal {\n    border: none;\n    border-radius: 5px;\n    margin: auto;\n\n    &::backdrop {\n        background-color: rgba(0, 0, 0, 0.5)\n    }\n}\n\n.add-list-form,\n.edit-list-item-form {\n    text-align: center;\n    padding: 10px;\n    display: flex;\n    gap: 10px;\n    flex-direction: column;\n\n    & h1 {\n        font-size: 2rem;\n        color: darkslategrey;\n    }\n}\n\n.add-list-input,\n.edit-list-item-input {\n    font-size: 1.2rem;\n    padding: 5px 10px;\n    border-radius: 5px;\n}\n\n.add-list-submit-button,\n.add-list-cancel-button,\n.edit-list-item-submit-button,\n.edit-list-item-cancel-button {\n    font-size: 1.2rem;\n    color: white;\n    font-weight: bold;\n    padding: 5px 0;\n    border: none;\n    border-radius: 5px;\n}\n\n.add-list-submit-button,\n.edit-list-item-submit-button  {\n    background-color: #3b82f6;\n}\n\n.add-list-cancel-button,\n.edit-list-item-cancel-button {\n    background-color: #ef4444;\n}\n\n.list-container {\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n}\n\n.list-item-container {\n    font-size: 1.5rem;\n    padding: 10px;\n    border-radius: 5px;\n    display: flex;\n    gap: 10px;\n    align-items: center;\n    \n    & .list-item {\n        width: 100%;\n    }\n\n    & .delete-list-item-button,\n    & .edit-list-item-button {\n        width: 1.2rem;\n        height: 1.2rem;\n        border: none;\n    }\n\n    & .delete-list-item-button {\n        background: url(${A}) no-repeat;\n    }\n\n    & .edit-list-item-button {\n        background: url(${p}) no-repeat;\n    }\n\n    &:hover {\n        background-color: rgba(0, 0, 0, 0.2);\n    }\n}\n\n.task-content {\n    padding: 10px;\n}`,"",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,sBAAsB;IACtB,SAAS;IACT,UAAU;AACd;;AAEA;IACI,aAAa;IACb,gDAAgD;IAChD,aAAa;IACb,8BAA8B;IAC9B,4BAA4B;AAChC;;AAEA;IACI,YAAY;IACZ,kBAAkB;IAClB,+BAA+B;IAC/B,aAAa;IACb,mBAAmB;AACvB;;AAEA;IACI,2BAA2B;IAC3B,aAAa;AACjB;;AAEA;IACI,mBAAmB;IACnB,aAAa;IACb,mBAAmB;AACvB;;AAEA;IACI,YAAY;IACZ,iBAAiB;IACjB,iBAAiB;IACjB,yBAAyB;IACzB,iBAAiB;IACjB,YAAY;IACZ,kBAAkB;AACtB;;AAEA;;IAEI,YAAY;IACZ,kBAAkB;IAClB,YAAY;;IAEZ;QACI;IACJ;AACJ;;AAEA;;IAEI,kBAAkB;IAClB,aAAa;IACb,aAAa;IACb,SAAS;IACT,sBAAsB;;IAEtB;QACI,eAAe;QACf,oBAAoB;IACxB;AACJ;;AAEA;;IAEI,iBAAiB;IACjB,iBAAiB;IACjB,kBAAkB;AACtB;;AAEA;;;;IAII,iBAAiB;IACjB,YAAY;IACZ,iBAAiB;IACjB,cAAc;IACd,YAAY;IACZ,kBAAkB;AACtB;;AAEA;;IAEI,yBAAyB;AAC7B;;AAEA;;IAEI,yBAAyB;AAC7B;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,SAAS;AACb;;AAEA;IACI,iBAAiB;IACjB,aAAa;IACb,kBAAkB;IAClB,aAAa;IACb,SAAS;IACT,mBAAmB;;IAEnB;QACI,WAAW;IACf;;IAEA;;QAEI,aAAa;QACb,cAAc;QACd,YAAY;IAChB;;IAEA;QACI,6DAAwD;IAC5D;;IAEA;QACI,6DAAsD;IAC1D;;IAEA;QACI,oCAAoC;IACxC;AACJ;;AAEA;IACI,aAAa;AACjB",sourcesContent:['* {\n    box-sizing: border-box;\n    margin: 0;\n    padding: 0;\n}\n\nbody {\n    height: 100vh;\n    font-family: Verdana, Geneva, Tahoma, sans-serif;\n    display: grid;\n    grid-template-columns: 1fr 3fr;\n    grid-template-rows: auto 1fr;\n}\n\n.header {\n    color: white;\n    text-align: center;\n    background-color: darkslategray;\n    padding: 10px;\n    grid-column: 1 / -1;\n}\n\n.list-content {\n    background-color: lightgray;\n    padding: 10px;\n}\n\n.add-list-content {\n    margin-bottom: 10px;\n    display: grid;\n    place-items: center;\n}\n\n.add-list-button {\n    color: white;\n    font-size: 1.5rem;\n    font-weight: bold;\n    background-color: #16a34a;\n    padding: 5px 10px;\n    border: none;\n    border-radius: 5px;\n}\n\n.add-list-modal,\n.edit-list-item-modal {\n    border: none;\n    border-radius: 5px;\n    margin: auto;\n\n    &::backdrop {\n        background-color: rgba(0, 0, 0, 0.5)\n    }\n}\n\n.add-list-form,\n.edit-list-item-form {\n    text-align: center;\n    padding: 10px;\n    display: flex;\n    gap: 10px;\n    flex-direction: column;\n\n    & h1 {\n        font-size: 2rem;\n        color: darkslategrey;\n    }\n}\n\n.add-list-input,\n.edit-list-item-input {\n    font-size: 1.2rem;\n    padding: 5px 10px;\n    border-radius: 5px;\n}\n\n.add-list-submit-button,\n.add-list-cancel-button,\n.edit-list-item-submit-button,\n.edit-list-item-cancel-button {\n    font-size: 1.2rem;\n    color: white;\n    font-weight: bold;\n    padding: 5px 0;\n    border: none;\n    border-radius: 5px;\n}\n\n.add-list-submit-button,\n.edit-list-item-submit-button  {\n    background-color: #3b82f6;\n}\n\n.add-list-cancel-button,\n.edit-list-item-cancel-button {\n    background-color: #ef4444;\n}\n\n.list-container {\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n}\n\n.list-item-container {\n    font-size: 1.5rem;\n    padding: 10px;\n    border-radius: 5px;\n    display: flex;\n    gap: 10px;\n    align-items: center;\n    \n    & .list-item {\n        width: 100%;\n    }\n\n    & .delete-list-item-button,\n    & .edit-list-item-button {\n        width: 1.2rem;\n        height: 1.2rem;\n        border: none;\n    }\n\n    & .delete-list-item-button {\n        background: url("./resources/delete-icon.svg") no-repeat;\n    }\n\n    & .edit-list-item-button {\n        background: url("./resources/edit-icon.svg") no-repeat;\n    }\n\n    &:hover {\n        background-color: rgba(0, 0, 0, 0.2);\n    }\n}\n\n.task-content {\n    padding: 10px;\n}'],sourceRoot:""}]);const m=u},645:t=>{t.exports=function(t){var e=[];return e.toString=function(){return this.map((function(e){var n="",i=void 0!==e[5];return e[4]&&(n+="@supports (".concat(e[4],") {")),e[2]&&(n+="@media ".concat(e[2]," {")),i&&(n+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),n+=t(e),i&&(n+="}"),e[2]&&(n+="}"),e[4]&&(n+="}"),n})).join("")},e.i=function(t,n,i,o,a){"string"==typeof t&&(t=[[null,t,void 0]]);var s={};if(i)for(var r=0;r<this.length;r++){var d=this[r][0];null!=d&&(s[d]=!0)}for(var c=0;c<t.length;c++){var l=[].concat(t[c]);i&&s[l[0]]||(void 0!==a&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=a),n&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=n):l[2]=n),o&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=o):l[4]="".concat(o)),e.push(l))}},e}},667:t=>{t.exports=function(t,e){return e||(e={}),t?(t=String(t.__esModule?t.default:t),/^['"].*['"]$/.test(t)&&(t=t.slice(1,-1)),e.hash&&(t+=e.hash),/["'() \t\n]|(%20)/.test(t)||e.needQuotes?'"'.concat(t.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):t):t}},537:t=>{t.exports=function(t){var e=t[1],n=t[3];if(!n)return e;if("function"==typeof btoa){var i=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(i),a="/*# ".concat(o," */");return[e].concat([a]).join("\n")}return[e].join("\n")}},379:t=>{var e=[];function n(t){for(var n=-1,i=0;i<e.length;i++)if(e[i].identifier===t){n=i;break}return n}function i(t,i){for(var a={},s=[],r=0;r<t.length;r++){var d=t[r],c=i.base?d[0]+i.base:d[0],l=a[c]||0,u="".concat(c," ").concat(l);a[c]=l+1;var A=n(u),p={css:d[1],media:d[2],sourceMap:d[3],supports:d[4],layer:d[5]};if(-1!==A)e[A].references++,e[A].updater(p);else{var m=o(p,i);i.byIndex=r,e.splice(r,0,{identifier:u,updater:m,references:1})}s.push(u)}return s}function o(t,e){var n=e.domAPI(e);return n.update(t),function(e){if(e){if(e.css===t.css&&e.media===t.media&&e.sourceMap===t.sourceMap&&e.supports===t.supports&&e.layer===t.layer)return;n.update(t=e)}else n.remove()}}t.exports=function(t,o){var a=i(t=t||[],o=o||{});return function(t){t=t||[];for(var s=0;s<a.length;s++){var r=n(a[s]);e[r].references--}for(var d=i(t,o),c=0;c<a.length;c++){var l=n(a[c]);0===e[l].references&&(e[l].updater(),e.splice(l,1))}a=d}}},569:t=>{var e={};t.exports=function(t,n){var i=function(t){if(void 0===e[t]){var n=document.querySelector(t);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(t){n=null}e[t]=n}return e[t]}(t);if(!i)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");i.appendChild(n)}},216:t=>{t.exports=function(t){var e=document.createElement("style");return t.setAttributes(e,t.attributes),t.insert(e,t.options),e}},565:(t,e,n)=>{t.exports=function(t){var e=n.nc;e&&t.setAttribute("nonce",e)}},795:t=>{t.exports=function(t){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=t.insertStyleElement(t);return{update:function(n){!function(t,e,n){var i="";n.supports&&(i+="@supports (".concat(n.supports,") {")),n.media&&(i+="@media ".concat(n.media," {"));var o=void 0!==n.layer;o&&(i+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),i+=n.css,o&&(i+="}"),n.media&&(i+="}"),n.supports&&(i+="}");var a=n.sourceMap;a&&"undefined"!=typeof btoa&&(i+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleTagTransform(i,t,e.options)}(e,t,n)},remove:function(){!function(t){if(null===t.parentNode)return!1;t.parentNode.removeChild(t)}(e)}}}},589:t=>{t.exports=function(t,e){if(e.styleSheet)e.styleSheet.cssText=t;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(t))}}},467:(t,e,n)=>{t.exports=n.p+"a0cac0a4ca0232a86a5b.svg"},640:(t,e,n)=>{t.exports=n.p+"ec6f6c24e90698c49d67.svg"}},e={};function n(i){var o=e[i];if(void 0!==o)return o.exports;var a=e[i]={id:i,exports:{}};return t[i](a,a.exports,n),a.exports}n.m=t,n.n=t=>{var e=t&&t.__esModule?()=>t.default:()=>t;return n.d(e,{a:e}),e},n.d=(t,e)=>{for(var i in e)n.o(e,i)&&!n.o(t,i)&&Object.defineProperty(t,i,{enumerable:!0,get:e[i]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(t){if("object"==typeof window)return window}}(),n.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),(()=>{var t;n.g.importScripts&&(t=n.g.location+"");var e=n.g.document;if(!t&&e&&(e.currentScript&&(t=e.currentScript.src),!t)){var i=e.getElementsByTagName("script");if(i.length)for(var o=i.length-1;o>-1&&!t;)t=i[o--].src}if(!t)throw new Error("Automatic publicPath is not supported in this browser");t=t.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),n.p=t})(),n.b=document.baseURI||self.location.href,n.nc=void 0,(()=>{class t{constructor(t,e,n){this.title=t,this.description=e,this.date=n,this.complete=!1}markAsComplete(){this.complete=!0}updateTask(t,e){this.title=t,this.description=e}}function e(t,e){document.querySelector(".task-content");const n=document.querySelector(".task-container"),i=document.querySelector(".task-list-title"),o=document.querySelector(".add-list-task-button"),a=document.querySelector(".add-list-task-modal"),s=document.querySelector(".add-list-task-title-input"),r=document.querySelector(".add-list-task-description-input"),d=document.querySelector(".add-list-task-date-input"),c=document.querySelector(".add-list-task-submit-button");function l(t,e,i){const o=document.createElement("div"),a=document.createElement("h3"),s=document.createElement("p"),r=document.createElement("p"),d=document.createElement("input"),c=document.createElement("label");a.textContent=t,s.textContent=e,r.textContent=`Date: ${i}`,c.textContent="Mark as done: ",d.setAttribute("type","checkbox"),c.setAttribute("id","status"),d.setAttribute("id","status"),o.appendChild(a),o.appendChild(s),o.appendChild(r),c.appendChild(d),o.appendChild(c),n.appendChild(o)}e.addEventListener("click",(function(){i.textContent=this.textContent,0===n.children.length||n.replaceChildren(),function(e,n){for(let i=0;i<n.length;i++)l(t.getListTask(e,n[i].title).title,t.getListTask(e,n[i].title).description,t.getListTask(e,n[i].title).date)}(this.textContent,t.getList(this.textContent))})),o.addEventListener("click",(function(){a.showModal(),function(n,i,o,a){a.addEventListener("click",(function(){t.createListTask(e.textContent,n.value,i.value,o.value),console.log(n.value),console.log(i.value),console.log(o.value),console.log(t),l(n.value,i.value,o.value)}))}(s,r,d,c)}))}var i=n(379),o=n.n(i),a=n(795),s=n.n(a),r=n(569),d=n.n(r),c=n(565),l=n.n(c),u=n(216),A=n.n(u),p=n(589),m=n.n(p),b=n(426),g={};g.styleTagTransform=m(),g.setAttributes=l(),g.insert=d().bind(null,"head"),g.domAPI=s(),g.insertStyleElement=A(),o()(b.Z,g),b.Z&&b.Z.locals&&b.Z.locals;const f=new class{list=[];createList(t){this.list.push({[t]:[]})}getList(t){return this.list.find((e=>e[t]))[t]}renameList(t,e){this.list.find((n=>{n[t]&&(n[e]=n[t],delete n[t])}))}deleteList(t){this.list.splice(this.list.findIndex((e=>e[t])),1)}createListTask(e,n,i,o){this.getList(e)&&this.getList(e).push(new t(n,i,o))}getListTask(t,e){return this.getList(t).find((t=>t.title===e))}deleteListTask(t,e){this.getList(t).splice(this.getList(t).findIndex((n=>n===this.getListTask(t,e))),1)}};f.createList("testList1"),f.createList("testList2"),f.createList("testList3"),f.createListTask("testList1","testList1Title1","testList1Description1",(new Date).toDateString()),f.createListTask("testList1","testList1Title2","testList1Description2",(new Date).toDateString()),f.createListTask("testList1","testList1Title3","testList1Description3",(new Date).toDateString()),f.createListTask("testList2","testList2Title1","testList2Description1",(new Date).toDateString()),f.createListTask("testList2","testList2Title2","testList2Description2",(new Date).toDateString()),f.createListTask("testList2","testList2Title3","testList2Description3",(new Date).toDateString()),f.createListTask("testList3","testList3Title1","testList3Description1",(new Date).toDateString()),f.createListTask("testList3","testList3Title2","testList3Description2",(new Date).toDateString()),f.createListTask("testList3","testList3Title3","testList3Description3",(new Date).toDateString()),function(t){const n=document.querySelector(".list-container"),i=document.querySelector(".add-list-button"),o=document.querySelector(".add-list-modal"),a=document.querySelector(".add-list-submit-button"),s=document.querySelector(".add-list-input");function r(i){const o=document.createElement("p"),a=document.createElement("button"),s=document.createElement("button"),r=document.createElement("dialog"),d=document.createElement("form"),c=document.createElement("h1"),l=document.createElement("input"),u=document.createElement("button"),A=document.createElement("button"),p=document.createElement("div");o.textContent=i,c.textContent="Edit List",u.textContent="Submit",A.textContent="Cancel",o.classList.add("list-item"),a.classList.add("delete-list-item-button"),s.classList.add("edit-list-item-button"),r.classList.add("edit-list-item-modal"),d.classList.add("edit-list-item-form"),l.classList.add("edit-list-item-input"),u.classList.add("edit-list-item-submit-button"),A.classList.add("edit-list-item-cancel-button"),p.classList.add("list-item-container"),d.setAttribute("method","dialog"),l.setAttribute("placeholder","New List Name"),function(e){e.addEventListener("click",(function(){t.deleteList(this.previousElementSibling.textContent),this.parentElement.remove()}))}(a),function(e){e.editListItemButton.addEventListener("click",(function(){e.editListItemModal.showModal(),e.editListItemSubmitButton.addEventListener("click",(function(){e.editListItemInput.value&&(t.renameList(e.listItem.textContent,e.editListItemInput.value),e.listItem.textContent=e.editListItemInput.value)}))}))}({listItem:o,editListItemButton:s,editListItemModal:r,editListItemInput:l,editListItemSubmitButton:u}),e(t,o),p.appendChild(o),p.appendChild(a),p.appendChild(s),d.appendChild(c),d.appendChild(l),d.appendChild(u),d.appendChild(A),r.appendChild(d),p.appendChild(r),n.appendChild(p)}var d;t.list.forEach((t=>{r(Object.getOwnPropertyNames(t))})),d=t,i.addEventListener("click",(function(){o.showModal()})),a.addEventListener("click",(function(){s.value?(d.createList(s.value),r(s.value)):alert("Please provide a list name")}))}(f),console.log(f)})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,